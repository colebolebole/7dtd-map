{
  "version": 3,
  "sources": ["../src/lib/utils.ts", "../src/lib/delayed-renderer.ts", "../src/lib/preset-button.ts", "../src/lib/labels.ts", "../src/lib/label-handler.ts", "../src/lib/url-state.ts", "../src/prefabs.ts"],
  "sourcesContent": ["export function requireNonnull<T>(t: T | undefined | null, errorMessage = () => `Unexpected state: ${String(t)}`): T {\n  if (t == null) throw Error(errorMessage());\n  return t;\n}\n\nexport function strictParseInt(s: string | undefined | null, errorMessage = () => `Unexpected argument: ${String(s)}`): number {\n  const n = parseInt(s ?? \"\");\n  if (isNaN(n)) throw Error(errorMessage());\n  return n;\n}\n\nexport function requireType<T>(o: unknown, t: new (...a: unknown[]) => T, errorMessage = () => `Unexpected type: ${String(o)}`): T {\n  if (o instanceof t) return o;\n  throw Error(errorMessage());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | undefined | null, t?: new (...a: unknown[]) => T): T {\n  const i = requireNonnull(id, () => \"Unexpected argument: id is null\");\n  const e = requireNonnull(document.getElementById(i), () => `Element not found: #${i}`);\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d.toString()}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: GameMapSize,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords, mapSize: GameMapSize) => number | null,\n  event: EventOffsets | null,\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  const y = elevation(gameCoords, map) ?? \"-\";\n  return `E/W: ${gameCoords.x.toString()}, N/S: ${gameCoords.z.toString()}, Elev: ${y.toString()}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function imageBitmapToPngBlob(img: ImageBitmap): Promise<PngBlob> {\n  const canvas = new OffscreenCanvas(img.height, img.width);\n  const context = requireNonnull(canvas.getContext(\"2d\"));\n  context.drawImage(img, 0, 0);\n  return (await canvas.convertToBlob({ type: \"image/png\" })) as PngBlob;\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n\nexport function printError(e: unknown): void {\n  console.error(e);\n}\n\nexport async function fetchJson<T>(url: string): Promise<T> {\n  return (await (await fetch(url)).json()) as T;\n}\n\nexport async function invokeAll<T>(fns: ((t: T) => unknown)[], t: T): Promise<void> {\n  await Promise.all(fns.map((fn) => fn(t)));\n}\n", "import { printError, waitAnimationFrame } from \"./utils\";\n\nexport class DelayedRenderer<T> {\n  _iterator: Iterator<T[]> = ([] as T[][])[Symbol.iterator]();\n  appendee: HTMLElement;\n  scrollableWrapper: HTMLElement;\n  itemRenderer: (item: T) => Node;\n  scrollCallback = (): void => {\n    this.renderAll().catch(printError);\n  };\n\n  constructor(scrollableWrapper: HTMLElement, appendee: HTMLElement, itemRenderer: (item: T) => Node) {\n    if (!scrollableWrapper.contains(appendee)) throw Error(\"Wrapper element should contain appendee element\");\n    appendee.innerHTML = \"\";\n    this.appendee = appendee;\n    this.scrollableWrapper = scrollableWrapper;\n    this.itemRenderer = itemRenderer;\n  }\n\n  set iterator(iteratorOrIterable: Iterator<T> | Iterable<T>) {\n    if (\"next\" in iteratorOrIterable) {\n      this._iterator = chunkIterator(iteratorOrIterable);\n    } else {\n      this._iterator = chunkIterator(iteratorOrIterable[Symbol.iterator]());\n    }\n    this.appendee.innerHTML = \"\";\n    this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n\n    // Require a delay because flashing childlen like the above fires \"scroll\" events.\n    requestAnimationFrame(() => {\n      this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n      this.scrollableWrapper.addEventListener(\"scroll\", this.scrollCallback, { once: true });\n      renderUntil(this, () => isFill(this.scrollableWrapper)).catch(printError);\n    });\n  }\n\n  async renderAll(): Promise<void> {\n    await renderUntil(this, () => false);\n  }\n}\n\nasync function renderUntil<T>(self: DelayedRenderer<T>, stopPredicate: () => boolean) {\n  while (!stopPredicate()) {\n    const result = self._iterator.next();\n    if (isReturn(result)) break;\n    const df = new DocumentFragment();\n    result.value.forEach((i) => df.appendChild(self.itemRenderer(i)));\n    self.appendee.appendChild(df);\n    await waitAnimationFrame();\n  }\n}\n\nfunction isFill(wrapper: HTMLElement) {\n  return wrapper.offsetHeight + 100 < wrapper.scrollHeight;\n}\n\nfunction chunkIterator<T, TReturn, TNext>(origin: Iterator<T, TReturn, TNext>, chunkSize = 10) {\n  let returnResult: IteratorReturnResult<TReturn> | null = null;\n  const chunkIter: Iterator<T[], TReturn, TNext> = {\n    next(...args: [] | [TNext]): IteratorResult<T[], TReturn> {\n      if (returnResult) return returnResult;\n      const chunk = Array<T>(chunkSize);\n      for (let i = 0; i < chunkSize; i++) {\n        const result = origin.next(...args);\n        if (isReturn(result)) {\n          returnResult = result;\n        } else {\n          chunk[i] = result.value;\n        }\n      }\n      return {\n        done: false,\n        value: chunk,\n      };\n    },\n  };\n  if (\"throw\" in origin) {\n    chunkIter.throw = (e?: unknown): IteratorResult<T[], TReturn> => {\n      const r = (origin.throw as (e?: unknown) => IteratorResult<T, TReturn>)(e);\n      if (isReturn(r)) return r;\n      else return { done: r.done ?? false, value: [r.value] };\n    };\n  }\n  if (\"return\" in origin) {\n    chunkIter.return = (treturn?: TReturn): IteratorResult<T[], TReturn> => {\n      const r = (origin.return as (treturn?: TReturn | undefined) => IteratorResult<T, TReturn>)(treturn);\n      if (isReturn(r)) return r;\n      else return { done: r.done ?? false, value: [r.value] };\n    };\n  }\n  return chunkIter;\n}\n\nfunction isReturn<T, TReturn>(r: IteratorResult<T, TReturn>): r is IteratorReturnResult<TReturn> {\n  return Boolean(r.done);\n}\n", "import { component, requireNonnull } from \"./utils\";\n\nexport function init(): void {\n  document.body.addEventListener(\"click\", ({ target }) => {\n    if (target instanceof HTMLButtonElement && target.dataset[\"inputFor\"] != null) {\n      const input = component(target.dataset[\"inputFor\"], HTMLInputElement);\n      input.value = requireNonnull(target.dataset[\"inputText\"] ?? target.textContent);\n      input.dispatchEvent(new Event(\"input\"));\n    }\n  });\n}\n", "export const LANGUAGES = [\n  \"english\",\n  \"german\",\n  \"spanish\",\n  \"french\",\n  \"italian\",\n  \"japanese\",\n  \"koreana\",\n  \"polish\",\n  \"brazilian\",\n  \"russian\",\n  \"turkish\",\n  \"schinese\",\n  \"tchinese\",\n] as const;\nexport type Language = (typeof LANGUAGES)[number];\n\nconst LANGUAGE_TAGS: { [tag: string]: Language } = {\n  en: \"english\",\n  de: \"german\",\n  es: \"spanish\",\n  fr: \"french\",\n  it: \"italian\",\n  ja: \"japanese\",\n  ko: \"koreana\",\n  pl: \"polish\",\n  pt: \"brazilian\",\n  ru: \"russian\",\n  tr: \"turkish\",\n  \"zh-CN\": \"schinese\",\n  \"zh-TW\": \"tchinese\",\n};\n\nexport class LabelHolder {\n  static DEFAULT_LANGUAGE: Language = \"english\";\n\n  private baseUrl: string;\n  private defaultBlocks: Promise<Map<string, string>>;\n  private defaultPrefabs: Promise<Map<string, string>>;\n\n  #language: Language;\n  #blocks: Promise<Labels>;\n  #prefabs: Promise<Labels>;\n\n  constructor(baseUrl: string, navigatorLanguages: readonly string[]) {\n    this.baseUrl = baseUrl;\n    this.#language = resolveLanguage(navigatorLanguages);\n    this.defaultBlocks = this.fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, \"blocks.json\");\n    this.defaultPrefabs = this.fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, \"prefabs.json\");\n    this.#blocks = this.buildLabels(this.defaultBlocks, \"blocks.json\");\n    this.#prefabs = this.buildLabels(this.defaultPrefabs, \"prefabs.json\");\n  }\n\n  get blocks(): Promise<Labels> {\n    return this.#blocks;\n  }\n\n  get prefabs(): Promise<Labels> {\n    return this.#prefabs;\n  }\n\n  set language(lang: Language) {\n    if (lang === this.#language) return;\n    console.log(\"LabelHolder set language: %s -> %s\", this.#language, lang);\n    this.#language = lang;\n    this.#blocks = this.buildLabels(this.defaultBlocks, \"blocks.json\");\n    this.#prefabs = this.buildLabels(this.defaultPrefabs, \"prefabs.json\");\n  }\n\n  async buildLabels(defaultLabels: Promise<Map<string, string>>, fileName: string): Promise<Labels> {\n    return new Labels(await this.fetchLabelMap(this.#language, fileName), await defaultLabels);\n  }\n\n  async fetchLabelMap(language: Language, fileName: string): Promise<Map<string, string>> {\n    return new Map(Object.entries(await fetchJson<Labels>(`${this.baseUrl}/${language}/${fileName}`)));\n  }\n}\n\nexport class Labels {\n  labels: Map<string, string>;\n  defaultLabels: Map<string, string>;\n\n  constructor(labels: Map<string, string>, defaultLabels: Map<string, string>) {\n    this.labels = labels;\n    this.defaultLabels = defaultLabels;\n  }\n\n  get(key: string): string | undefined {\n    return this.labels.get(key) ?? this.defaultLabels.get(key);\n  }\n}\n\nexport function resolveLanguage(languages: readonly string[]): Language {\n  for (const clientTag of languages) {\n    for (const [tag, lang] of Object.entries(LANGUAGE_TAGS)) {\n      if (clientTag.startsWith(tag)) return lang;\n    }\n  }\n  return LabelHolder.DEFAULT_LANGUAGE;\n}\n\nasync function fetchJson<T>(path: string): Promise<T> {\n  return (await fetch(path)).json() as T;\n}\n", "import { LANGUAGES, Language, resolveLanguage } from \"./labels\";\nimport { printError } from \"./utils\";\n\ninterface Doms {\n  language: HTMLSelectElement;\n}\n\nexport class LabelHandler {\n  private doms: Doms;\n  private listener: ((lang: Language) => void | Promise<void>)[] = [];\n\n  constructor(doms: Doms, navigatorLanguages: readonly string[]) {\n    this.doms = doms;\n    this.buildSelectOptions(navigatorLanguages);\n    this.doms.language.addEventListener(\"change\", () => {\n      this.listener.forEach((fn) => {\n        fn(this.doms.language.value as Language)?.catch(printError);\n      });\n    });\n  }\n\n  private buildSelectOptions(navigatorLanguages: readonly string[]) {\n    const existingLangs = new Set(Array.from(this.doms.language.options).map((o) => o.value));\n    for (const lang of LANGUAGES) {\n      if (existingLangs.has(lang)) {\n        continue;\n      }\n      const option = document.createElement(\"option\");\n      option.textContent = lang;\n      this.doms.language.appendChild(option);\n    }\n\n    const browserLang = resolveLanguage(navigatorLanguages);\n    if (this.doms.language.value !== browserLang) {\n      this.doms.language.value = resolveLanguage(navigatorLanguages);\n      requestAnimationFrame(() => this.doms.language.dispatchEvent(new Event(\"change\")));\n    }\n  }\n\n  addListener(fn: (lang: Language) => void | Promise<void>) {\n    this.listener.push(fn);\n  }\n}\n", "interface StateElement {\n  defaultValue: string;\n  element: HTMLInputElement;\n}\n\n// Store values of input elements in the URL query string.\nexport class UrlState {\n  private url: URL;\n  private inputs: Map<HTMLInputElement, StateElement>;\n  private udpateListeners: ((url: URL) => void)[] = [];\n\n  private constructor(browserUrl: URL, elements: ArrayLike<StateElement>) {\n    this.url = browserUrl;\n    this.inputs = new Map(Array.from(elements).map((e) => [e.element, e]));\n    this.init();\n  }\n\n  private init() {\n    for (const [input, { defaultValue }] of this.inputs.entries()) {\n      if (this.url.searchParams.has(input.id)) {\n        setValue(input, this.url.searchParams.get(input.id) ?? defaultValue);\n        input.dispatchEvent(new Event(\"input\"));\n      }\n\n      input.addEventListener(\"input\", () => {\n        this.updateUrl(input, defaultValue);\n        this.udpateListeners.forEach((fn) => {\n          fn(this.url);\n        });\n      });\n    }\n  }\n\n  static create(location: Location, elements: ArrayLike<HTMLInputElement>): UrlState {\n    return new UrlState(\n      new URL(location.href),\n      Array.from(elements).map((e) => ({ defaultValue: getValue(e), element: e })),\n    );\n  }\n\n  private updateUrl(input: HTMLInputElement, defaultValue: string) {\n    const value = getValue(input);\n    if (value === defaultValue) {\n      this.url.searchParams.delete(input.id);\n    } else {\n      this.url.searchParams.set(input.id, value);\n    }\n  }\n\n  addUpdateListener(listener: (url: URL) => void) {\n    this.udpateListeners.push(listener);\n  }\n}\n\nfunction getValue(input: HTMLInputElement): string {\n  switch (input.type) {\n    case \"checkbox\":\n      return input.checked ? \"t\" : \"\";\n    default:\n      return input.value;\n  }\n}\n\nfunction setValue(input: HTMLInputElement, value: string) {\n  switch (input.type) {\n    case \"checkbox\":\n      input.checked = value === \"t\";\n      break;\n    default:\n      input.value = value;\n  }\n}\n", "import { DelayedRenderer } from \"./lib/delayed-renderer\";\nimport * as presetButton from \"./lib/preset-button\";\nimport { component, fetchJson, printError } from \"./lib/utils\";\nimport { PrefabUpdate } from \"./lib/prefabs\";\nimport * as prefabsFilter from \"./worker/prefabs-filter\";\nimport { Language } from \"./lib/labels\";\nimport { LabelHandler } from \"./lib/label-handler\";\nimport { UrlState } from \"./lib/url-state\";\n\ninterface HighlightedPrefab {\n  name: string;\n  difficulty?: number;\n  highlightedName?: string;\n  highlightedLabel?: string;\n  matchedBlocks?: HighlightedBlock[];\n}\n\nfunction main() {\n  presetButton.init();\n\n  const urlState = UrlState.create(location, document.querySelectorAll(\"input\"));\n  urlState.addUpdateListener((url) => {\n    window.history.replaceState(null, \"\", url.toString());\n  });\n\n  const prefabsHandler = new PrefabsHandler(new Worker(\"worker/prefabs-filter.js\"));\n  (async () => {\n    const [index, difficulties] = await Promise.all([\n      fetchJson<PrefabBlockIndex>(\"prefab-block-index.json\"),\n      fetchJson<PrefabDifficulties>(\"prefab-difficulties.json\"),\n    ]);\n    const prefabs = Object.keys(index).map((n) => ({ name: n, x: 0, z: 0, difficulty: difficulties[n] ?? 0 }));\n    prefabsHandler.prefabs = prefabs;\n  })().catch(printError);\n\n  const blocksFilter = component(\"blocks_filter\", HTMLInputElement);\n  prefabsHandler.blockFilter = blocksFilter.value;\n  blocksFilter.addEventListener(\"input\", () => {\n    prefabsHandler.blockFilter = blocksFilter.value;\n  });\n\n  const labelHandler = new LabelHandler({ language: component(\"label_lang\", HTMLSelectElement) }, navigator.languages);\n  labelHandler.addListener((lang) => {\n    prefabsHandler.language = lang;\n  });\n\n  const prefabFilterHandler = new PrefabFilterHandler({ devPrefabs: component(\"dev_prefabs\", HTMLInputElement) });\n  prefabFilterHandler.addUpdateListener(() => {\n    prefabsHandler.refresh();\n  });\n\n  const prefabListRenderer = new DelayedRenderer<HighlightedPrefab>(document.body, component(\"prefabs_list\"), (p) => prefabLi(p));\n  prefabsHandler.listeners.push((update) => {\n    prefabListRenderer.iterator = update.prefabs.filter(prefabFilterHandler.filter());\n  });\n}\n\nfunction prefabLi(prefab: HighlightedPrefab) {\n  const li = document.createElement(\"li\");\n  li.innerHTML = [\n    ...(prefab.difficulty\n      ? [\n          `<span title=\"Difficulty Tier ${prefab.difficulty.toString()}\" class=\"prefab_difficulty_${prefab.difficulty.toString()}\">`,\n          `  <span class=\"prefab_difficulty_icon\">\uD83D\uDC80</span>${prefab.difficulty.toString()}`,\n          `</span>`,\n        ]\n      : []),\n    `<a href=\"prefabs/${prefab.name}.html\" target=\"_blank\">`,\n    prefab.highlightedLabel ?? \"-\",\n    \"/\",\n    `<small>${prefab.highlightedName ?? prefab.name}</small>`,\n    \"</a>\",\n  ].join(\" \");\n  if (prefab.matchedBlocks && prefab.matchedBlocks.length > 0) {\n    const blocksUl = document.createElement(\"ul\");\n    prefab.matchedBlocks.forEach((block) => {\n      if (block.count === undefined) return;\n      const blockLi = document.createElement(\"li\");\n      blockLi.innerHTML = [\n        `<button data-input-for=\"blocks_filter\" data-input-text=\"${block.name}\" title=\"Filter with this block name\">\u25B2</button>`,\n        `${block.count.toString()}x`,\n        block.highlightedLabel,\n        `<small>${block.highlightedName}</small>`,\n      ].join(\" \");\n      blocksUl.appendChild(blockLi);\n    });\n    li.appendChild(blocksUl);\n  }\n  return li;\n}\n\ndeclare class PrefabsFilterWorker extends Worker {\n  postMessage(message: prefabsFilter.InMessage): void;\n}\n\nclass PrefabsHandler {\n  worker: PrefabsFilterWorker;\n  listeners: ((prefabs: PrefabUpdate) => void | Promise<void>)[] = [];\n\n  constructor(worker: PrefabsFilterWorker) {\n    this.worker = worker;\n    this.worker.addEventListener(\"message\", (event: MessageEvent<PrefabUpdate>) => {\n      for (const fn of this.listeners) {\n        fn(event.data)?.catch(printError);\n      }\n    });\n  }\n\n  set prefabs(p: Prefab[]) {\n    this.worker.postMessage({ all: p });\n  }\n\n  set blockFilter(filter: string) {\n    this.worker.postMessage({ blocksFilterString: filter });\n  }\n\n  set language(language: Language) {\n    this.worker.postMessage({ language });\n  }\n\n  refresh() {\n    this.worker.postMessage({});\n  }\n}\n\nclass PrefabFilterHandler {\n  displayDevPrefab = false;\n  updateListener: (() => void)[] = [];\n\n  constructor(doms: { devPrefabs: HTMLInputElement }) {\n    this.displayDevPrefab = doms.devPrefabs.checked;\n    doms.devPrefabs.addEventListener(\"input\", () => {\n      this.displayDevPrefab = doms.devPrefabs.checked;\n      this.updateListener.forEach((fn) => {\n        fn();\n      });\n    });\n  }\n\n  filter(): (prefab: HighlightedPrefab) => boolean {\n    return (prefab) => {\n      if (!this.displayDevPrefab) {\n        return !/^aaa_/i.test(prefab.name);\n      }\n      return true;\n    };\n  }\n\n  addUpdateListener(fn: () => void) {\n    this.updateListener.push(fn);\n  }\n}\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", main);\n} else {\n  main();\n}\n"],
  "mappings": "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",
  "names": ["requireNonnull", "errorMessage", "requireType", "o", "t", "errorMessage", "component", "id", "i", "requireNonnull", "e", "waitAnimationFrame", "r", "printError", "e", "fetchJson", "url", "DelayedRenderer", "printError", "scrollableWrapper", "appendee", "itemRenderer", "iteratorOrIterable", "chunkIterator", "renderUntil", "isFill", "self", "stopPredicate", "result", "isReturn", "df", "i", "waitAnimationFrame", "wrapper", "origin", "chunkSize", "returnResult", "chunkIter", "args", "chunk", "e", "r", "treturn", "init", "target", "input", "component", "requireNonnull", "LANGUAGES", "LANGUAGE_TAGS", "LabelHolder", "_LabelHolder", "#language", "#blocks", "#prefabs", "baseUrl", "navigatorLanguages", "resolveLanguage", "lang", "defaultLabels", "fileName", "Labels", "language", "fetchJson", "labels", "key", "languages", "clientTag", "tag", "path", "LabelHandler", "doms", "navigatorLanguages", "fn", "printError", "existingLangs", "o", "lang", "LANGUAGES", "option", "browserLang", "resolveLanguage", "UrlState", "_UrlState", "browserUrl", "elements", "e", "input", "defaultValue", "setValue", "fn", "location", "getValue", "value", "listener", "main", "init", "UrlState", "url", "prefabsHandler", "PrefabsHandler", "index", "difficulties", "fetchJson", "prefabs", "n", "printError", "blocksFilter", "component", "LabelHandler", "lang", "prefabFilterHandler", "PrefabFilterHandler", "prefabListRenderer", "DelayedRenderer", "p", "prefabLi", "update", "prefab", "li", "blocksUl", "block", "blockLi", "worker", "event", "fn", "filter", "language", "doms"]
}

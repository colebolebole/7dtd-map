{
  "version": 3,
  "sources": ["../src/lib/utils.ts", "../src/lib/delayed-renderer.ts", "../src/lib/errors.ts", "../src/lib/events.ts", "../src/lib/labels.ts", "../src/lib/label-handler.ts", "../src/lib/ui/min-max-inputs.ts", "../src/lib/ui/preset-button.ts", "../src/lib/ui/sync-output.ts", "../src/lib/url-state.ts", "../src/prefabs.ts"],
  "sourcesContent": ["export function requireNonnull<T>(t: T | undefined | null, errorMessage = () => `Unexpected state: ${String(t)}`): T {\n  if (t == null) throw Error(errorMessage());\n  return t;\n}\n\nexport function strictParseInt(s: string | undefined | null, errorMessage = () => `Unexpected argument: ${String(s)}`): number {\n  const n = parseInt(s ?? \"\");\n  if (isNaN(n)) throw Error(errorMessage());\n  return n;\n}\n\nexport function requireType<T>(\n  o: unknown,\n  t: new (...a: unknown[]) => T,\n  errorMessage = () => `Unexpected type: expected as ${String(t)}, but actual type ${String(o)}`,\n): T {\n  if (o instanceof t) return o;\n  throw Error(errorMessage());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | undefined | null, t?: new (...a: unknown[]) => T): T {\n  const i = requireNonnull(id, () => \"Unexpected argument: id is null\");\n  const e = requireNonnull(document.getElementById(i), () => `Element not found: #${i}`);\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance([direction, distance]: [Direction | null, number]): string {\n  const dir = direction ?? \"\";\n  if (distance < 1000) {\n    return `${dir} ${distance.toString()}m`;\n  }\n  return `${dir} ${(distance / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport async function formatCoords(\n  map: GameMapSize | null,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords) => Promise<number | null>,\n  event: EventOffsets | null,\n): Promise<string> {\n  if (!event || !map) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) return \"E/W: -, N/S: -, Elev: -\";\n\n  const y = (await elevation(gameCoords)) ?? \"-\";\n  return `E/W: ${gameCoords.x.toString()}, N/S: ${gameCoords.z.toString()}, Elev: ${y.toString()}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n\nexport function printError(e: unknown): void {\n  console.error(e);\n}\n\nexport async function fetchJson<T>(url: string): Promise<T> {\n  const r = await fetch(url);\n  if (!r.ok) throw Error(`Failed to fetch ${url}: ${r.statusText}`);\n  return (await r.json()) as T;\n}\n\nexport function basename(path: string) {\n  return path.substring(path.lastIndexOf(\"/\") + 1);\n}\n\nexport async function readWholeStream(stream: ReadableStream<Uint8Array>): Promise<Uint8Array> {\n  return new Uint8Array(await new Response(stream).arrayBuffer());\n}\n", "import { printError, waitAnimationFrame } from \"./utils\";\n\nexport class DelayedRenderer<T> {\n  _iterator: Iterator<T[]> = ([] as T[][])[Symbol.iterator]();\n  appendee: HTMLElement;\n  scrollableWrapper: HTMLElement;\n  itemRenderer: (item: T) => Node;\n  scrollCallback = (): void => {\n    this.renderAll().catch(printError);\n  };\n\n  constructor(scrollableWrapper: HTMLElement, appendee: HTMLElement, itemRenderer: (item: T) => Node) {\n    if (!scrollableWrapper.contains(appendee)) throw Error(\"Wrapper element should contain appendee element\");\n    appendee.innerHTML = \"\";\n    this.appendee = appendee;\n    this.scrollableWrapper = scrollableWrapper;\n    this.itemRenderer = itemRenderer;\n  }\n\n  set iterator(iteratorOrIterable: Iterator<T> | Iterable<T>) {\n    if (\"next\" in iteratorOrIterable) {\n      this._iterator = chunkIterator(iteratorOrIterable);\n    } else {\n      this._iterator = chunkIterator(iteratorOrIterable[Symbol.iterator]());\n    }\n    this.appendee.innerHTML = \"\";\n    this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n\n    // Require a delay because flashing childlen like the above fires \"scroll\" events.\n    requestAnimationFrame(() => {\n      this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n      this.scrollableWrapper.addEventListener(\"scroll\", this.scrollCallback, { once: true });\n      // TODO Prevent double rendering iterations\n      renderUntil(this, () => isFill(this.scrollableWrapper)).catch(printError);\n    });\n  }\n\n  async renderAll(): Promise<void> {\n    await renderUntil(this, () => false);\n  }\n}\n\nasync function renderUntil<T>(self: DelayedRenderer<T>, stopPredicate: () => boolean) {\n  do {\n    const result = self._iterator.next();\n    if (isReturn(result)) break;\n    const df = new DocumentFragment();\n    result.value.forEach((i) => df.appendChild(self.itemRenderer(i)));\n    self.appendee.appendChild(df);\n    await waitAnimationFrame();\n  } while (!stopPredicate());\n}\n\nfunction isFill(wrapper: HTMLElement) {\n  return wrapper.clientHeight + 100 < wrapper.scrollHeight;\n}\n\nfunction chunkIterator<T, TReturn, TNext>(origin: Iterator<T, TReturn, TNext>, chunkSize = 10) {\n  let returnResult: IteratorReturnResult<TReturn> | null = null;\n  const chunkIter: Iterator<T[], TReturn, TNext> = {\n    next(...args: [] | [TNext]): IteratorResult<T[], TReturn> {\n      if (returnResult) return returnResult;\n      const chunk = Array<T>(chunkSize);\n      for (let i = 0; i < chunkSize; i++) {\n        const result = origin.next(...args);\n        if (isReturn(result)) {\n          returnResult = result;\n        } else {\n          chunk[i] = result.value;\n        }\n      }\n      return {\n        done: false,\n        value: chunk,\n      };\n    },\n  };\n  if (\"throw\" in origin) {\n    chunkIter.throw = (e?: unknown): IteratorResult<T[], TReturn> => {\n      const r = (origin.throw as (e?: unknown) => IteratorResult<T, TReturn>)(e);\n      if (isReturn(r)) return r;\n      else return { done: r.done ?? false, value: [r.value] };\n    };\n  }\n  if (\"return\" in origin) {\n    chunkIter.return = (treturn?: TReturn): IteratorResult<T[], TReturn> => {\n      const r = (origin.return as (treturn?: TReturn | undefined) => IteratorResult<T, TReturn>)(treturn);\n      if (isReturn(r)) return r;\n      else return { done: r.done ?? false, value: [r.value] };\n    };\n  }\n  return chunkIter;\n}\n\nfunction isReturn<T, TReturn>(r: IteratorResult<T, TReturn>): r is IteratorReturnResult<TReturn> {\n  return Boolean(r.done);\n}\n", "export class MultipleErrors extends Error {\n  #causes;\n  constructor(errors: unknown[]) {\n    super(\"Multiple errors occurred\");\n    this.#causes = errors;\n  }\n\n  get causes() {\n    return this.#causes;\n  }\n}\n", "import { printError } from \"./utils\";\nimport { MultipleErrors } from \"./errors\";\n\nexport type MessageMap<N extends string> = { [K in N]?: object };\nexport type Listener<N extends string, M extends MessageMap<N>> = (m: M) => unknown;\n\nexport class ListenerManager<N extends string, M extends MessageMap<N>> {\n  #listeners: Listener<N, M>[] = [];\n\n  addListener(listener: Listener<N, M>) {\n    this.#listeners.push(listener);\n  }\n\n  removeListener(listener: Listener<N, M>) {\n    const index = this.#listeners.indexOf(listener);\n    if (index >= 0) this.#listeners.splice(index, 1);\n  }\n\n  async dispatch(m: M) {\n    const results = await Promise.allSettled(this.#listeners.map((fn) => fn(m)));\n    const errors = results.flatMap((r) => (r.status === \"rejected\" ? [r.reason as unknown] : []));\n    if (errors.length > 0) throw new MultipleErrors(errors);\n  }\n\n  dispatchNoAwait(m: M) {\n    this.dispatch(m).catch(printError);\n  }\n}\n", "import { fetchJson } from \"./utils\";\n\nexport const LANGUAGES = [\n  \"english\",\n  \"german\",\n  \"spanish\",\n  \"french\",\n  \"italian\",\n  \"japanese\",\n  \"koreana\",\n  \"polish\",\n  \"brazilian\",\n  \"russian\",\n  \"turkish\",\n  \"schinese\",\n  \"tchinese\",\n] as const;\nexport type Language = (typeof LANGUAGES)[number];\n\nconst LANGUAGE_TAGS: { [tag: string]: Language } = {\n  en: \"english\",\n  de: \"german\",\n  es: \"spanish\",\n  fr: \"french\",\n  it: \"italian\",\n  ja: \"japanese\",\n  ko: \"koreana\",\n  pl: \"polish\",\n  pt: \"brazilian\",\n  ru: \"russian\",\n  tr: \"turkish\",\n  \"zh-CN\": \"schinese\",\n  \"zh-TW\": \"tchinese\",\n};\n\nconst FILE_BASE_NAMES = [\"blocks\", \"prefabs\", \"shapes\"] as const;\ntype FileBaseName = (typeof FILE_BASE_NAMES)[number];\n\nexport class LabelHolder {\n  static DEFAULT_LANGUAGE: Language = \"english\";\n\n  #baseUrl: string;\n  #language: Language;\n  #fallbacks: Map<FileBaseName, Promise<Map<string, string>>>;\n  #labels: Map<FileBaseName, Promise<Labels>>;\n\n  constructor(baseUrl: string, navigatorLanguages: readonly string[]) {\n    this.#baseUrl = baseUrl;\n    this.#language = resolveLanguage(navigatorLanguages);\n    this.#fallbacks = new Map(FILE_BASE_NAMES.map((n) => [n, this.#fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, n)] as const));\n    this.#labels = this.#buildAllLabels();\n  }\n\n  get(fileId: FileBaseName): Promise<Labels> {\n    const labels = this.#labels.get(fileId);\n    if (!labels) throw new Error(`No labels for ${this.#language}/${fileId}`);\n    return labels;\n  }\n\n  set language(lang: Language) {\n    if (lang === this.#language) return;\n    console.log(\"LabelHolder set language: %s -> %s\", this.#language, lang);\n    this.#language = lang;\n    this.#labels = this.#buildAllLabels();\n  }\n\n  #buildAllLabels(): Map<FileBaseName, Promise<Labels>> {\n    return new Map(FILE_BASE_NAMES.map((n) => [n, this.#buildLabels(n)]));\n  }\n\n  async #buildLabels(fileBaseName: FileBaseName): Promise<Labels> {\n    const fallback = this.#fallbacks.get(fileBaseName);\n    if (!fallback) throw new Error(`No fallback for ${this.#language}/${fileBaseName}`);\n    return new Labels(await this.#fetchLabelMap(this.#language, fileBaseName), await fallback);\n  }\n\n  async #fetchLabelMap(language: Language, fileId: FileBaseName): Promise<Map<string, string>> {\n    return new Map(Object.entries(await fetchJson(`${this.#baseUrl}/${language}/${fileId}.json`)));\n  }\n}\n\nexport class Labels {\n  #labels: Map<string, string>;\n  #fallback: Map<string, string>;\n\n  constructor(labels: Map<string, string>, defaultLabels: Map<string, string>) {\n    this.#labels = labels;\n    this.#fallback = defaultLabels;\n  }\n\n  get(key: string): string | undefined {\n    return this.#labels.get(key) ?? this.#fallback.get(key);\n  }\n}\n\nexport function resolveLanguage(languages: readonly string[]): Language {\n  for (const clientTag of languages) {\n    for (const [tag, lang] of Object.entries(LANGUAGE_TAGS)) {\n      if (clientTag.startsWith(tag)) return lang;\n    }\n  }\n  return LabelHolder.DEFAULT_LANGUAGE;\n}\n", "import { LANGUAGES, Language, resolveLanguage } from \"./labels\";\nimport * as events from \"./events\";\n\ninterface Doms {\n  language: HTMLSelectElement;\n}\n\ninterface EventMessage {\n  update: { lang: Language };\n}\n\nexport class LabelHandler {\n  #doms: Doms;\n  #listener = new events.ListenerManager<\"update\", EventMessage>();\n\n  constructor(doms: Doms, navigatorLanguages: readonly string[]) {\n    this.#doms = doms;\n    this.buildSelectOptions(navigatorLanguages);\n    this.#doms.language.addEventListener(\"change\", () => {\n      this.#listener.dispatchNoAwait({ update: { lang: this.#doms.language.value as Language } });\n    });\n  }\n\n  private buildSelectOptions(navigatorLanguages: readonly string[]) {\n    const existingLangs = new Set(Array.from(this.#doms.language.options).map((o) => o.value));\n    for (const lang of LANGUAGES) {\n      if (existingLangs.has(lang)) {\n        continue;\n      }\n      const option = document.createElement(\"option\");\n      option.textContent = lang;\n      this.#doms.language.appendChild(option);\n    }\n\n    const browserLang = resolveLanguage(navigatorLanguages);\n    if (this.#doms.language.value !== browserLang) {\n      this.#doms.language.value = resolveLanguage(navigatorLanguages);\n      requestAnimationFrame(() => this.#doms.language.dispatchEvent(new Event(\"change\")));\n    }\n  }\n\n  addListener(fn: (m: EventMessage) => void | Promise<void>) {\n    this.#listener.addListener(fn);\n  }\n}\n", "// Sync values between two inputs, one for max and one for min.\n\nexport function init() {\n  for (const eventName of [\"input\", \"change\"]) {\n    window.addEventListener(eventName, ({ target }) => {\n      if (!(target instanceof HTMLInputElement)) return;\n      updateMinMax(target);\n    });\n  }\n\n  for (const input of [\n    ...document.querySelectorAll<HTMLInputElement>(\"input[data-max]\"),\n    ...document.querySelectorAll<HTMLInputElement>(\"input[data-min]\"),\n  ]) {\n    updateMinMax(input);\n  }\n}\n\nfunction updateMinMax(target: HTMLInputElement) {\n  if (target.dataset[\"min\"]) updateMaxValues(target, target.dataset[\"min\"]);\n  if (target.dataset[\"max\"]) updateMinValues(target, target.dataset[\"max\"]);\n}\n\nfunction updateMaxValues(target: HTMLInputElement, minMaxId: string) {\n  const maxInputs = document.querySelectorAll<HTMLInputElement>(`input[data-max=\"${minMaxId}\"]`);\n  for (const maxInput of maxInputs) {\n    if (maxInput.valueAsNumber < target.valueAsNumber) {\n      const oldValue = maxInput.value;\n      maxInput.value = target.value;\n      if (oldValue !== maxInput.value) dispatchInputEvent(maxInput);\n    }\n  }\n}\n\nfunction updateMinValues(target: HTMLInputElement, minMaxId: string) {\n  const minInputs = document.querySelectorAll<HTMLInputElement>(`input[data-min=\"${minMaxId}\"]`);\n  for (const minInput of minInputs) {\n    if (minInput.valueAsNumber > target.valueAsNumber) {\n      const oldValue = minInput.value;\n      minInput.value = target.value;\n      if (oldValue !== minInput.value) dispatchInputEvent(minInput);\n    }\n  }\n}\n\nfunction dispatchInputEvent(input: HTMLInputElement) {\n  for (const eventName of [\"input\", \"change\"]) input.dispatchEvent(new Event(eventName, { bubbles: true }));\n}\n", "import { component, requireNonnull } from \"../utils\";\n\nexport function init(): void {\n  document.body.addEventListener(\"click\", ({ target }) => {\n    if (target instanceof HTMLButtonElement && target.dataset[\"inputFor\"] != null) {\n      const input = component(target.dataset[\"inputFor\"], HTMLInputElement);\n      input.value = requireNonnull(target.dataset[\"inputText\"] ?? target.textContent);\n      input.dispatchEvent(new Event(\"input\", { bubbles: true }));\n    }\n  });\n}\n", "import { component } from \"../utils\";\n\nexport function init(): void {\n  for (const eventName of [\"input\", \"change\"]) {\n    window.addEventListener(eventName, ({ target }) => {\n      if (!(target instanceof HTMLInputElement) || !(target instanceof HTMLTextAreaElement || !(target instanceof HTMLSelectElement)))\n        return;\n      const outputElements = document.querySelectorAll<HTMLOutputElement>(`output[data-sync-for=\"${target.id}\"]`);\n      for (const output of outputElements) {\n        output.value = target.value;\n      }\n    });\n  }\n\n  for (const output of document.querySelectorAll<HTMLOutputElement>(\"output[data-sync-for]\")) {\n    const input = component(output.dataset[\"syncFor\"], HTMLInputElement);\n    output.value = input.value;\n  }\n}\n", "interface StateElement {\n  defaultValue: string;\n  element: HTMLInputElement;\n}\n\n// Store values of input elements in the URL query string.\nexport class UrlState {\n  private url: URL;\n  private inputs: Map<HTMLInputElement, StateElement>;\n  private udpateListeners: ((url: URL) => void)[] = [];\n\n  private constructor(browserUrl: URL, elements: ArrayLike<StateElement>) {\n    this.url = browserUrl;\n    this.inputs = new Map(Array.from(elements).map((e) => [e.element, e]));\n    this.init();\n  }\n\n  private init() {\n    for (const [input, { defaultValue }] of this.inputs.entries()) {\n      if (this.url.searchParams.has(input.id)) {\n        setValue(input, this.url.searchParams.get(input.id) ?? defaultValue);\n        input.dispatchEvent(new Event(\"input\"));\n      }\n\n      input.addEventListener(\"input\", () => {\n        this.updateUrl(input, defaultValue);\n        this.udpateListeners.forEach((fn) => {\n          fn(this.url);\n        });\n      });\n    }\n  }\n\n  static create(location: Location, elements: ArrayLike<HTMLInputElement>): UrlState {\n    return new UrlState(\n      new URL(location.href),\n      Array.from(elements).map((e) => ({ defaultValue: getValue(e), element: e })),\n    );\n  }\n\n  private updateUrl(input: HTMLInputElement, defaultValue: string) {\n    const value = getValue(input);\n    if (value === defaultValue) {\n      this.url.searchParams.delete(input.id);\n    } else {\n      this.url.searchParams.set(input.id, value);\n    }\n  }\n\n  addUpdateListener(listener: (url: URL) => void) {\n    this.udpateListeners.push(listener);\n  }\n}\n\nfunction getValue(input: HTMLInputElement): string {\n  switch (input.type) {\n    case \"checkbox\":\n      return input.checked ? \"t\" : \"\";\n    default:\n      return input.value;\n  }\n}\n\nfunction setValue(input: HTMLInputElement, value: string) {\n  switch (input.type) {\n    case \"checkbox\":\n      input.checked = value === \"t\";\n      break;\n    default:\n      input.value = value;\n  }\n}\n", "import type * as prefabsFilter from \"./worker/prefabs-filter\";\n\nimport { DelayedRenderer } from \"./lib/delayed-renderer\";\nimport * as events from \"./lib/events\";\nimport { LabelHandler } from \"./lib/label-handler\";\nimport * as minMaxInputs from \"./lib/ui/min-max-inputs\";\nimport * as presetButton from \"./lib/ui/preset-button\";\nimport * as syncOutput from \"./lib/ui/sync-output\";\nimport { UrlState } from \"./lib/url-state\";\nimport { component, fetchJson, printError } from \"./lib/utils\";\n\ninterface HighlightedPrefab {\n  name: string;\n  difficulty?: number;\n  highlightedName?: string;\n  highlightedLabel?: string;\n  matchedBlocks?: HighlightedBlock[];\n}\n\nfunction main() {\n  presetButton.init();\n  syncOutput.init();\n  minMaxInputs.init();\n\n  const urlState = UrlState.create(location, document.querySelectorAll(\"input\"));\n  urlState.addUpdateListener((url) => {\n    window.history.replaceState(null, \"\", url.toString());\n  });\n\n  const prefabsHandler = new PrefabsHandler(\n    {\n      prefabFilter: component(\"prefab-filter\", HTMLInputElement),\n      blockFilter: component(\"block-filter\", HTMLInputElement),\n      minTier: component(\"min-tier\", HTMLInputElement),\n      maxTier: component(\"max-tier\", HTMLInputElement),\n      excludes: Array.from(component(\"prefab-excludes\").querySelectorAll(\"input[type=checkbox]\")),\n    },\n    new Worker(\"worker/prefabs-filter.js\"),\n    new LabelHandler({ language: component(\"label-lang\", HTMLSelectElement) }, navigator.languages),\n    async () => {\n      const [prefabBlockCounts, difficulties] = await Promise.all([\n        fetchJson<PrefabBlockCounts>(\"prefab-block-counts.json\"),\n        fetchJson<PrefabDifficulties>(\"prefab-difficulties.json\"),\n      ]);\n      return Object.keys(prefabBlockCounts).map((n) => ({\n        name: n,\n        x: 0,\n        z: 0,\n        difficulty: difficulties[n] ?? 0,\n      }));\n    },\n  );\n\n  const minTier = component(\"min-tier\", HTMLInputElement);\n  const maxTier = component(\"max-tier\", HTMLInputElement);\n  const tierClear = component(\"tier-clear\", HTMLButtonElement);\n  tierClear.addEventListener(\"click\", () => {\n    minTier.value = minTier.defaultValue;\n    maxTier.value = maxTier.defaultValue;\n    minTier.dispatchEvent(new Event(\"input\"));\n    maxTier.dispatchEvent(new Event(\"input\"));\n  });\n\n  const status = component(\"prefabs-status\");\n  const prefabListRenderer = new DelayedRenderer<HighlightedPrefab>(document.documentElement, component(\"prefabs-list\"), (p) =>\n    prefabLi(p),\n  );\n  prefabsHandler.addListener(({ update }) => {\n    status.textContent = update.status;\n    prefabListRenderer.iterator = update.prefabs;\n  });\n\n  // Workaround that document.documentElement never fires \"scroll\" event\n  document.addEventListener(\"scroll\", () => {\n    document.documentElement.dispatchEvent(new Event(\"scroll\"));\n  });\n}\n\nfunction prefabLi(prefab: HighlightedPrefab) {\n  const li = document.createElement(\"li\");\n  li.innerHTML = [\n    ...(prefab.difficulty\n      ? [\n          `<span title=\"Difficulty Tier ${prefab.difficulty.toString()}\" class=\"prefab-difficulty-${prefab.difficulty.toString()}\">`,\n          `  \uD83D\uDC80${prefab.difficulty.toString()}`,\n          `</span>`,\n        ]\n      : []),\n    `<a href=\"prefabs/${prefab.name}.html\" target=\"_blank\">`,\n    prefab.highlightedLabel ?? \"-\",\n    \"/\",\n    `<small>${prefab.highlightedName ?? prefab.name}</small></a>`,\n    ...(prefab.matchedBlocks && prefab.matchedBlocks.length > 0 ? [\"has\", countHighlightedBlocks(prefab.matchedBlocks), \"blocks\"] : []),\n  ].join(\" \");\n  if (prefab.matchedBlocks && prefab.matchedBlocks.length > 0) {\n    const blocksUl = document.createElement(\"ul\");\n    prefab.matchedBlocks.forEach((block) => {\n      if (block.count === undefined) return;\n      const blockLi = document.createElement(\"li\");\n      blockLi.innerHTML = [\n        `<button data-input-for=\"blocks-filter\" data-input-text=\"${block.name}\" title=\"Filter with this block name\">\u25B2</button>`,\n        `${block.count.toString()}x`,\n        block.highlightedLabel,\n        `<small>${block.highlightedName}</small>`,\n      ].join(\" \");\n      blocksUl.appendChild(blockLi);\n    });\n    li.appendChild(blocksUl);\n  }\n  return li;\n}\n\nfunction countHighlightedBlocks(blocks: HighlightedBlock[]): number {\n  return blocks.reduce((acc, b) => acc + (b.count ?? 0), 0);\n}\n\ndeclare class PrefabsFilterWorker extends Worker {\n  postMessage(message: prefabsFilter.InMessage): void;\n}\n\ntype PrefabsHandlerEventMessage = prefabsFilter.OutMessage;\n\ninterface PrefabsHandlerDoms {\n  prefabFilter: HTMLInputElement;\n  blockFilter: HTMLInputElement;\n  minTier: HTMLInputElement;\n  maxTier: HTMLInputElement;\n  excludes: HTMLInputElement[];\n}\n\nclass PrefabsHandler {\n  #doms: PrefabsHandlerDoms;\n  #worker: PrefabsFilterWorker;\n  #listeners = new events.ListenerManager<\"update\", PrefabsHandlerEventMessage>();\n\n  constructor(doms: PrefabsHandlerDoms, worker: PrefabsFilterWorker, labelHandler: LabelHandler, fetchPrefabs: () => Promise<Prefab[]>) {\n    this.#doms = doms;\n    this.#worker = worker;\n\n    doms.prefabFilter.addEventListener(\"input\", () => {\n      worker.postMessage({ prefabFilterRegexp: doms.prefabFilter.value });\n    });\n    doms.blockFilter.addEventListener(\"input\", () => {\n      worker.postMessage({ blockFilterRegexp: doms.blockFilter.value });\n    });\n    const tierRange = { start: doms.minTier.valueAsNumber, end: doms.maxTier.valueAsNumber };\n    this.#tierRange = tierRange;\n    doms.minTier.addEventListener(\"input\", () => {\n      const newMinTier = doms.minTier.valueAsNumber;\n      if (newMinTier === tierRange.start) return;\n      tierRange.start = newMinTier;\n      this.#tierRange = tierRange;\n    });\n    doms.maxTier.addEventListener(\"input\", () => {\n      const newMaxTier = doms.maxTier.valueAsNumber;\n      if (newMaxTier === tierRange.end) return;\n      tierRange.end = newMaxTier;\n      this.#tierRange = tierRange;\n    });\n    worker.postMessage({ preExcludes: this.#excludes });\n    doms.excludes.forEach((e) => {\n      e.addEventListener(\"change\", () => {\n        worker.postMessage({ preExcludes: this.#excludes });\n      });\n    });\n\n    worker.addEventListener(\"message\", (event: MessageEvent<prefabsFilter.OutMessage>) => {\n      this.#listeners.dispatchNoAwait(event.data);\n    });\n    labelHandler.addListener(({ update: { lang } }) => {\n      worker.postMessage({ language: lang });\n    });\n    fetchPrefabs()\n      .then((p) => {\n        worker.postMessage({ all: p });\n      })\n      .catch(printError);\n  }\n\n  get #excludes(): string[] {\n    return this.#doms.excludes.flatMap((e) => (e.checked ? [e.value] : []));\n  }\n\n  set #tierRange(range: NumberRange) {\n    this.#worker.postMessage({ difficulty: range });\n  }\n\n  addListener(fn: (m: PrefabsHandlerEventMessage) => unknown) {\n    this.#listeners.addListener(fn);\n  }\n}\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", main);\n} else {\n  main();\n}\n"],
  "mappings": "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",
  "names": ["init", "init", "location", "init"]
}

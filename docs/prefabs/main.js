"use strict";(()=>{var g=["english","german","spanish","french","italian","japanese","koreana","polish","brazilian","russian","turkish","schinese","tchinese"],h={en:"english",de:"german",es:"spanish",fr:"french",it:"italian",ja:"japanese",ko:"koreana",pl:"polish",pt:"brazilian",ru:"russian",tr:"turkish","zh-CN":"schinese","zh-TW":"tchinese"},a=class t{static DEFAULT_LANGUAGE="english";baseUrl;defaultBlocks;defaultPrefabs;#e;#t;#n;constructor(e,n){this.baseUrl=e,this.#e=o(n),this.defaultBlocks=this.fetchLabelMap(t.DEFAULT_LANGUAGE,"blocks.json"),this.defaultPrefabs=this.fetchLabelMap(t.DEFAULT_LANGUAGE,"prefabs.json"),this.#t=this.buildLabels(this.defaultBlocks,"blocks.json"),this.#n=this.buildLabels(this.defaultPrefabs,"prefabs.json")}get blocks(){return this.#t}get prefabs(){return this.#n}set language(e){e!==this.#e&&(console.log("LabelHolder set language: %s -> %s",this.#e,e),this.#e=e,this.#t=this.buildLabels(this.defaultBlocks,"blocks.json"),this.#n=this.buildLabels(this.defaultPrefabs,"prefabs.json"))}async buildLabels(e,n){return new l(await this.fetchLabelMap(this.#e,n),await e)}async fetchLabelMap(e,n){return new Map(Object.entries(await p(`${this.baseUrl}/${e}/${n}`)))}},l=class{labels;defaultLabels;constructor(e,n){this.labels=e,this.defaultLabels=n}get(e){return this.labels.get(e)??this.defaultLabels.get(e)}};function o(t){for(let e of t)for(let[n,r]of Object.entries(h))if(e.startsWith(n))return r;return a.DEFAULT_LANGUAGE}async function p(t){return(await fetch(t)).json()}function f(t,e=()=>`Unexpected state: ${String(t)}`){if(t!=null)return t;throw Error(e())}function b(t,e,n=()=>`Unexpected type: ${String(t)}`){if(t instanceof e)return t;throw Error(n())}function u(t,e){let n=f(t,()=>"Unexpected argument: id is null"),r=f(document.getElementById(n),()=>`Element not found: #${n}`);return e?b(r,e):r}function m(t){console.error(t)}var i=class{doms;listener=[];constructor(e,n){this.doms=e,this.buildSelectOptions(n),this.doms.language.addEventListener("change",()=>{this.listener.forEach(r=>{r(this.doms.language.value)?.catch(m)})})}buildSelectOptions(e){let n=new Set(Array.from(this.doms.language.options).map(s=>s.value));for(let s of g){if(n.has(s))continue;let c=document.createElement("option");c.textContent=s,this.doms.language.appendChild(c)}let r=o(e);this.doms.language.value!==r&&(this.doms.language.value=o(e),requestAnimationFrame(()=>this.doms.language.dispatchEvent(new Event("change"))))}addListener(e){this.listener.push(e)}};function d(){let t=new a("../labels",navigator.languages);new i({language:u("label_lang",HTMLSelectElement)},navigator.languages).addListener(async n=>{t.language=n,L(await t.prefabs),E(await t.blocks)})}function L(t){let e=document.querySelector(".prefab_name")?.textContent?.trim();if(!e)return;let n=document.querySelector(".prefab_label");n&&(n.textContent=t.get(e)??"-")}function E(t){for(let e of u("blocks",HTMLElement).querySelectorAll(".block")){let n=e.querySelector(".block_name")?.textContent?.trim();if(!n)continue;let r=e.querySelector(".block_label");r&&(r.textContent=t.get(n)??"-")}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",d):d();})();
//# sourceMappingURL=main.js.map

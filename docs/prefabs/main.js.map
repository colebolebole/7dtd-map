{"version":3,"file":"prefabs/main.js","mappings":"+GAAA,eAMA,qBAIEA,YAAYC,EAAYC,GAFhB,KAAAC,SAAyC,GAG/CC,KAAKH,KAAOA,EACZG,KAAKC,mBAAmBH,GACxBE,KAAKH,KAAKK,SAASC,iBAAiB,UAAU,KAC5CH,KAAKD,SAASK,KAAKC,GAAOA,EAAGL,KAAKH,KAAKK,SAASI,QAAmB,GAEvE,CAEQL,mBAAmBH,GACzB,MAAMS,EAAgB,IAAIC,IAAIC,MAAMC,KAAKV,KAAKH,KAAKK,SAASS,SAASP,KAAKQ,GAAMA,EAAEN,SAClF,IAAK,MAAMO,KAAQ,EAAAC,UAAW,CAC5B,GAAIP,EAAcQ,IAAIF,GACpB,SAEF,MAAMG,EAASC,SAASC,cAAc,UACtCF,EAAOG,YAAcN,EACrBb,KAAKH,KAAKK,SAASkB,YAAYJ,E,CAGjC,MAAMK,GAAc,IAAAC,iBAAgBxB,GAChCE,KAAKH,KAAKK,SAASI,QAAUe,IAC/BrB,KAAKH,KAAKK,SAASI,OAAQ,IAAAgB,iBAAgBxB,GAC3CyB,uBAAsB,IAAMvB,KAAKH,KAAKK,SAASsB,cAAc,IAAIC,MAAM,aAE3E,CAEAC,YAAYrB,GACVL,KAAKD,SAAS4B,KAAKtB,EACrB,E,q2BCtCW,EAAAS,UAAY,CACvB,UACA,SACA,UACA,SACA,UACA,WACA,UACA,SACA,YACA,UACA,UACA,WACA,YAIF,MAAMc,EAA6C,CACjDC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,WACJC,GAAI,UACJC,GAAI,SACJC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJ,QAAS,WACT,QAAS,YAGX,MAAaC,EAWX5C,YAAY6C,EAAiB3C,GAJ7B,mBACA,mBACA,mBAGEE,KAAKyC,QAAUA,EACf,EAAAzC,KAAI,EAAasB,EAAgBxB,GAAmB,KACpDE,KAAK0C,cAAgB1C,KAAK2C,cAAcH,EAAYI,iBAAkB,eACtE5C,KAAK6C,eAAiB7C,KAAK2C,cAAcH,EAAYI,iBAAkB,gBACvE,EAAA5C,KAAI,EAAWA,KAAK8C,YAAY9C,KAAK0C,cAAe,eAAc,KAClE,EAAA1C,KAAI,EAAYA,KAAK8C,YAAY9C,KAAK6C,eAAgB,gBAAe,IACvE,CAEIE,aACF,OAAO,EAAA/C,KAAI,MACb,CAEIgD,cACF,OAAO,EAAAhD,KAAI,MACb,CAEIE,aAASW,GACPA,IAAS,EAAAb,KAAI,SACjBiD,QAAQC,IAAI,qCAAsC,EAAAlD,KAAI,OAAYa,GAClE,EAAAb,KAAI,EAAaa,EAAI,KACrB,EAAAb,KAAI,EAAWA,KAAK8C,YAAY9C,KAAK0C,cAAe,eAAc,KAClE,EAAA1C,KAAI,EAAYA,KAAK8C,YAAY9C,KAAK6C,eAAgB,gBAAe,KACvE,CAEAM,kBAAkBC,EAA6CC,GAC7D,OAAO,IAAIC,QAAatD,KAAK2C,cAAc,EAAA3C,KAAI,OAAYqD,SAAiBD,EAC9E,CAEAD,oBAAoBjD,EAAoBmD,GACtC,OAAO,IAAIE,IAAIC,OAAOC,cA2B1BN,eAA4BO,GAC1B,aAAcC,MAAMD,IAAOE,MAC7B,CA7BwCC,CAAkB,GAAG7D,KAAKyC,WAAWvC,KAAYmD,MACvF,EA1CF,gB,0CACS,EAAAT,iBAA6B,UA4CtC,MAAaU,EAIX1D,YAAYkE,EAA6BV,GACvCpD,KAAK8D,OAASA,EACd9D,KAAKoD,cAAgBA,CACvB,CAEAW,IAAIC,GACF,OAAOhE,KAAK8D,OAAOC,IAAIC,IAAQhE,KAAKoD,cAAcW,IAAIC,EACxD,EAGF,SAAgB1C,EAAgB2C,GAC9B,IAAK,MAAMC,KAAaD,EACtB,IAAK,MAAOE,EAAKtD,KAAS2C,OAAOC,QAAQ7B,GACvC,GAAIsC,EAAUE,WAAWD,GAAM,OAAOtD,EAG1C,OAAO2B,EAAYI,gBACrB,CArBA,WAcA,mB,cC5FA,SAAgByB,EAAkBC,EAAyBC,EAAU,KAAM,qBAAqBD,MAC9F,GAAS,MAALA,EAAW,OAAOA,EACjB,MAAME,MAAMD,IACnB,CAEA,SAAgBE,EAAe7D,EAAY0D,EAAiCC,EAAU,KAAM,oBAAoB3D,MAC9G,GAAIA,aAAa0D,EAAG,OAAO1D,EAC3B,MAAM4D,MAAMD,IACd,CAqEA,SAAgBG,EAAWC,GACzB,MAAO,CAAEC,KAAM,UAAWD,EAC5B,CAGA,SAAgBE,EAAwBC,EAAqBC,EAAsBC,GAEjF,MAAMC,EAAMH,EAAMI,QAAUH,EAAQI,MAASH,EAAWG,MAClDC,EAAMN,EAAMO,QAAUN,EAAQO,OAAUN,EAAWM,OACzD,GAAIL,EAAK,GAAKA,GAAMF,EAAQI,OAASC,EAAK,GAAKA,GAAML,EAAQO,OAC3D,OAAO,KAIT,MAAMC,EAAIN,EAAKO,KAAKC,MAAMV,EAAQI,MAAQ,GACpCO,EAAIF,KAAKC,MAAMV,EAAQO,OAAS,GAAKF,EAC3C,OAAOV,EAAW,CAAEa,EAAGC,KAAKG,MAAMJ,GAAIG,EAAGF,KAAKG,MAAMD,IACtD,C,4SA9FA,mBAKA,gBAKA,qBAA+DE,EAA+BtB,GAC5F,MAAMuB,EAAIxB,EACRpD,SAAS6E,eAAezB,EAAeuB,GAAI,IAAM,6BAA6BA,QAC9E,IAAM,uBAAuBA,MAE/B,OAAOtB,EAAIG,EAAYoB,EAAGvB,GAAMuB,CAClC,EAEA,6BAAkCA,GAChC,KAAOA,EAAEE,WAAWF,EAAEG,YAAYH,EAAEE,UACtC,EAEA,iCAAsCE,GACpC,OAAIA,EAAI,IACC,GAAGA,KAEL,IAAIA,EAAI,KAAMC,QAAQ,MAC/B,EAEA,gCACE,OAAO,IAAIC,SAASC,GAAM7E,sBAAsB6E,IAClD,EAOA,wBACEhG,EACAiG,EACAC,EACAxB,GAEA,IAAKA,EAAO,MAAO,0BAEnB,MAAMJ,EAAaG,EAAwBC,EAAO1E,EAAKiG,GACvD,GAAmB,OAAf3B,EACF,MAAO,0BAGT,MAAM6B,EAAID,EAAU5B,EAAYtE,IAAQ,IACxC,MAAO,QAAQsE,EAAWa,WAAWb,EAAWgB,YAAYa,GAC9D,EAEA,6BAAkClD,EAAkBgD,GAClD,MAAMG,EAAIvF,SAASC,cAAc,KACjCsF,EAAEC,SAAWpD,EACbmD,EAAEE,KAAOL,EAAOM,UAAU,aAC1BH,EAAEI,OACJ,EAEA,uBAAOzD,eAAoC0D,GACzC,MAAMR,EAAS,IAAIS,gBAAgBD,EAAIvB,OAAQuB,EAAI1B,OAGnD,OAFgBd,EAAegC,EAAOU,WAAW,OACzCC,UAAUH,EAAK,EAAG,SACZR,EAAOY,cAAc,CAAErC,KAAM,aAC7C,EAEA,QAAOzB,eAAqB+D,GAC1B,OAAO,IAAIf,SAASC,GAAMe,WAAWf,EAAGc,IAC1C,EAEA,uBAA4BE,GAC1B,MAAO,CAAExC,KAAM,UAAWwC,EAC5B,EAEA,eAKA,4BAcA,0BAA+BjC,EAAeG,GAC5C,MAAO,CAAEV,KAAM,aAAcO,QAAOG,SACtC,C,GCjGI+B,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,C,MCtBA,eACA,SACA,SAEA,SAASI,IACP,MAAMC,EAAc,IAAI,EAAAvF,YAAY,YAAawF,UAAU/D,WACtC,IAAI,EAAAgE,aAAa,CAAE/H,UAAU,IAAAgI,WAAU,aAAcC,oBAAsBH,UAAU/D,WAC7FvC,aAAYyB,MAAOtC,IAC9BkH,EAAY7H,SAAWW,EAM3B,SAA4BiD,GAC1B,MAAMsE,EAAOnH,SAASoH,cAAc,iBAAiBlH,aAAamH,OAClE,IAAKF,EAAM,OACX,MAAMG,EAAUtH,SAASoH,cAAc,iBAClCE,IACLA,EAAQpH,YAAc2C,EAAOC,IAAIqE,IAAS,IAC5C,CAXII,OAAyBT,EAAY/E,SAazC,SAA2Bc,GACzB,IAAK,MAAM2E,KAAW,IAAAP,WAAU,SAAUQ,aAAaC,iBAAiB,UAAW,CACjF,MAAMP,EAAOK,EAAQJ,cAAc,gBAAgBlH,aAAamH,OAChE,IAAKF,EAAM,SACX,MAAMG,EAAUE,EAAQJ,cAAc,gBACjCE,IACLA,EAAQpH,YAAc2C,EAAOC,IAAIqE,IAAS,I,CAE9C,CApBIQ,OAAwBb,EAAYhF,OAAO,GAE/C,CAoB4B,YAAxB9B,SAAS4H,WACX5H,SAASd,iBAAiB,mBAAoB2H,GAE9CA,G","sources":["webpack://7dtd-map/./src/lib/label-handler.ts","webpack://7dtd-map/./src/lib/labels.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/./src/prefabs/main.ts"],"sourcesContent":["import { LANGUAGES, Language, resolveLanguage } from \"./labels\";\n\ninterface Doms {\n  language: HTMLSelectElement;\n}\n\nexport class LabelHandler {\n  private doms: Doms;\n  private listener: ((lang: Language) => void)[] = [];\n\n  constructor(doms: Doms, navigatorLanguages: readonly string[]) {\n    this.doms = doms;\n    this.buildSelectOptions(navigatorLanguages);\n    this.doms.language.addEventListener(\"change\", () => {\n      this.listener.map((fn) => fn(this.doms.language.value as Language));\n    });\n  }\n\n  private buildSelectOptions(navigatorLanguages: readonly string[]) {\n    const existingLangs = new Set(Array.from(this.doms.language.options).map((o) => o.value));\n    for (const lang of LANGUAGES) {\n      if (existingLangs.has(lang)) {\n        continue;\n      }\n      const option = document.createElement(\"option\");\n      option.textContent = lang;\n      this.doms.language.appendChild(option);\n    }\n\n    const browserLang = resolveLanguage(navigatorLanguages);\n    if (this.doms.language.value !== browserLang) {\n      this.doms.language.value = resolveLanguage(navigatorLanguages);\n      requestAnimationFrame(() => this.doms.language.dispatchEvent(new Event(\"change\")));\n    }\n  }\n\n  addListener(fn: (lang: Language) => void) {\n    this.listener.push(fn);\n  }\n}\n","export const LANGUAGES = [\n  \"english\",\n  \"german\",\n  \"spanish\",\n  \"french\",\n  \"italian\",\n  \"japanese\",\n  \"koreana\",\n  \"polish\",\n  \"brazilian\",\n  \"russian\",\n  \"turkish\",\n  \"schinese\",\n  \"tchinese\",\n] as const;\nexport type Language = (typeof LANGUAGES)[number];\n\nconst LANGUAGE_TAGS: { [tag: string]: Language } = {\n  en: \"english\",\n  de: \"german\",\n  es: \"spanish\",\n  fr: \"french\",\n  it: \"italian\",\n  ja: \"japanese\",\n  ko: \"koreana\",\n  pl: \"polish\",\n  pt: \"brazilian\",\n  ru: \"russian\",\n  tr: \"turkish\",\n  \"zh-CN\": \"schinese\",\n  \"zh-TW\": \"tchinese\",\n};\n\nexport class LabelHolder {\n  static DEFAULT_LANGUAGE: Language = \"english\";\n\n  private baseUrl: string;\n  private defaultBlocks: Promise<Map<string, string>>;\n  private defaultPrefabs: Promise<Map<string, string>>;\n\n  #language: Language;\n  #blocks: Promise<Labels>;\n  #prefabs: Promise<Labels>;\n\n  constructor(baseUrl: string, navigatorLanguages: readonly string[]) {\n    this.baseUrl = baseUrl;\n    this.#language = resolveLanguage(navigatorLanguages);\n    this.defaultBlocks = this.fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, \"blocks.json\");\n    this.defaultPrefabs = this.fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, \"prefabs.json\");\n    this.#blocks = this.buildLabels(this.defaultBlocks, \"blocks.json\");\n    this.#prefabs = this.buildLabels(this.defaultPrefabs, \"prefabs.json\");\n  }\n\n  get blocks(): Promise<Labels> {\n    return this.#blocks;\n  }\n\n  get prefabs(): Promise<Labels> {\n    return this.#prefabs;\n  }\n\n  set language(lang: Language) {\n    if (lang === this.#language) return;\n    console.log(\"LabelHolder set language: %s -> %s\", this.#language, lang);\n    this.#language = lang;\n    this.#blocks = this.buildLabels(this.defaultBlocks, \"blocks.json\");\n    this.#prefabs = this.buildLabels(this.defaultPrefabs, \"prefabs.json\");\n  }\n\n  async buildLabels(defaultLabels: Promise<Map<string, string>>, fileName: string): Promise<Labels> {\n    return new Labels(await this.fetchLabelMap(this.#language, fileName), await defaultLabels);\n  }\n\n  async fetchLabelMap(language: Language, fileName: string): Promise<Map<string, string>> {\n    return new Map(Object.entries(await fetchJson<Labels>(`${this.baseUrl}/${language}/${fileName}`)));\n  }\n}\n\nexport class Labels {\n  labels: Map<string, string>;\n  defaultLabels: Map<string, string>;\n\n  constructor(labels: Map<string, string>, defaultLabels: Map<string, string>) {\n    this.labels = labels;\n    this.defaultLabels = defaultLabels;\n  }\n\n  get(key: string): string | undefined {\n    return this.labels.get(key) ?? this.defaultLabels.get(key);\n  }\n}\n\nexport function resolveLanguage(languages: readonly string[]): Language {\n  for (const clientTag of languages) {\n    for (const [tag, lang] of Object.entries(LANGUAGE_TAGS)) {\n      if (clientTag.startsWith(tag)) return lang;\n    }\n  }\n  return LabelHolder.DEFAULT_LANGUAGE;\n}\n\nasync function fetchJson<T>(path: string): Promise<T> {\n  return (await fetch(path)).json();\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t != null) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: GameMapSize,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords, mapSize: GameMapSize) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  const y = elevation(gameCoords, map) ?? \"-\";\n  return `E/W: ${gameCoords.x}, N/S: ${gameCoords.z}, Elev: ${y}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function imageBitmapToPngBlob(img: ImageBitmap): Promise<PngBlob> {\n  const canvas = new OffscreenCanvas(img.height, img.width);\n  const context = requireNonnull(canvas.getContext(\"2d\"));\n  context.drawImage(img, 0, 0);\n  return (await canvas.convertToBlob({ type: \"image/png\" })) as PngBlob;\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { LabelHandler } from \"../lib/label-handler\";\nimport { LabelHolder, Labels } from \"../lib/labels\";\nimport { component } from \"../lib/utils\";\n\nfunction main() {\n  const labelHolder = new LabelHolder(\"../labels\", navigator.languages);\n  const labelHandler = new LabelHandler({ language: component(\"label_lang\", HTMLSelectElement) }, navigator.languages);\n  labelHandler.addListener(async (lang) => {\n    labelHolder.language = lang;\n    updatePrefabLabels(await labelHolder.prefabs);\n    udpateBlockLabels(await labelHolder.blocks);\n  });\n}\n\nfunction updatePrefabLabels(labels: Labels) {\n  const name = document.querySelector(\".prefab_name\")?.textContent?.trim();\n  if (!name) return;\n  const labelEl = document.querySelector(\".prefab_label\");\n  if (!labelEl) return;\n  labelEl.textContent = labels.get(name) ?? \"-\";\n}\n\nfunction udpateBlockLabels(labels: Labels) {\n  for (const blockEl of component(\"blocks\", HTMLElement).querySelectorAll(\".block\")) {\n    const name = blockEl.querySelector(\".block_name\")?.textContent?.trim();\n    if (!name) continue;\n    const labelEl = blockEl.querySelector(\".block_label\");\n    if (!labelEl) continue;\n    labelEl.textContent = labels.get(name) ?? \"-\";\n  }\n}\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", main);\n} else {\n  main();\n}\n"],"names":["constructor","doms","navigatorLanguages","listener","this","buildSelectOptions","language","addEventListener","map","fn","value","existingLangs","Set","Array","from","options","o","lang","LANGUAGES","has","option","document","createElement","textContent","appendChild","browserLang","resolveLanguage","requestAnimationFrame","dispatchEvent","Event","addListener","push","LANGUAGE_TAGS","en","de","es","fr","it","ja","ko","pl","pt","ru","tr","LabelHolder","baseUrl","defaultBlocks","fetchLabelMap","DEFAULT_LANGUAGE","defaultPrefabs","buildLabels","blocks","prefabs","console","log","async","defaultLabels","fileName","Labels","Map","Object","entries","path","fetch","json","fetchJson","labels","get","key","languages","clientTag","tag","startsWith","requireNonnull","t","message","Error","requireType","gameCoords","c","type","canvasEventToGameCoords","event","mapSize","canvasSize","gx","offsetX","width","gz","offsetY","height","x","Math","floor","z","round","id","e","getElementById","lastChild","removeChild","d","toFixed","Promise","r","canvas","elevation","y","a","download","href","toDataURL","click","img","OffscreenCanvas","getContext","drawImage","convertToBlob","msec","setTimeout","s","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","main","labelHolder","navigator","LabelHandler","component","HTMLSelectElement","name","querySelector","trim","labelEl","updatePrefabLabels","blockEl","HTMLElement","querySelectorAll","udpateBlockLabels","readyState"],"sourceRoot":""}
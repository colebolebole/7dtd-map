{"version":3,"file":"worker/prefabs-filter.js","mappings":"63BAAa,EAAAA,UAAY,CACvB,UACA,SACA,UACA,SACA,UACA,WACA,UACA,SACA,YACA,UACA,UACA,WACA,YAIF,MAAMC,EAA6C,CACjDC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,WACJC,GAAI,UACJC,GAAI,SACJC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJ,QAAS,WACT,QAAS,YAGX,MAAaC,EAWXC,YAAYC,EAAiBC,GAJ7B,mBACA,mBACA,mBAGEC,KAAKF,QAAUA,EACf,EAAAE,KAAI,EAAaC,EAAgBF,GAAmB,KACpDC,KAAKE,cAAgBF,KAAKG,cAAcP,EAAYQ,iBAAkB,eACtEJ,KAAKK,eAAiBL,KAAKG,cAAcP,EAAYQ,iBAAkB,gBACvE,EAAAJ,KAAI,EAAWA,KAAKM,YAAYN,KAAKE,cAAe,eAAc,KAClE,EAAAF,KAAI,EAAYA,KAAKM,YAAYN,KAAKK,eAAgB,gBAAe,IACvE,CAEIE,aACF,OAAO,EAAAP,KAAI,MACb,CAEIQ,cACF,OAAO,EAAAR,KAAI,MACb,CAEIS,aAASC,GACPA,IAAS,EAAAV,KAAI,SACjBW,QAAQC,IAAI,qCAAsC,EAAAZ,KAAI,OAAYU,GAClE,EAAAV,KAAI,EAAaU,EAAI,KACrB,EAAAV,KAAI,EAAWA,KAAKM,YAAYN,KAAKE,cAAe,eAAc,KAClE,EAAAF,KAAI,EAAYA,KAAKM,YAAYN,KAAKK,eAAgB,gBAAe,KACvE,CAEAQ,kBAAkBC,EAA6CC,GAC7D,OAAO,IAAIC,QAAahB,KAAKG,cAAc,EAAAH,KAAI,OAAYe,SAAiBD,EAC9E,CAEAD,oBAAoBJ,EAAoBM,GACtC,OAAO,IAAIE,IAAIC,OAAOC,cA2B1BN,eAA4BO,GAC1B,aAAcC,MAAMD,IAAOE,MAC7B,CA7BwCC,CAAkB,GAAGvB,KAAKF,WAAWW,KAAYM,MACvF,EA1CF,gB,0CACS,EAAAX,iBAA6B,UA4CtC,MAAaY,EAIXnB,YAAY2B,EAA6BV,GACvCd,KAAKwB,OAASA,EACdxB,KAAKc,cAAgBA,CACvB,CAEAW,IAAIC,GACF,OAAO1B,KAAKwB,OAAOC,IAAIC,IAAQ1B,KAAKc,cAAcW,IAAIC,EACxD,EAGF,SAAgBzB,EAAgB0B,GAC9B,IAAK,MAAMC,KAAaD,EACtB,IAAK,MAAOE,EAAKnB,KAASQ,OAAOC,QAAQnC,GACvC,GAAI4C,EAAUE,WAAWD,GAAM,OAAOnB,EAG1C,OAAOd,EAAYQ,gBACrB,CArBA,WAcA,mB,syBC5FA,eACA,SA8FA,SAAS2B,EAAWC,EAAqBC,GACvC,OAAID,EAAEE,KAAOD,EAAEC,KAAa,EACxBF,EAAEE,KAAOD,EAAEC,MAAc,EACtB,CACT,CAEA,SAASC,EAAWH,EAAsBC,GACxC,OAAKD,EAAEI,MAASH,EAAEG,KACdJ,EAAEI,KAAOH,EAAEG,KAAa,EACxBJ,EAAEI,KAAOH,EAAEG,MAAc,EACtBL,EAAWC,EAAGC,GAHUF,EAAWC,EAAGC,EAI/C,CAMA,SAASI,EAAkBC,EAAaC,GACtC,IAAIC,GAAY,EAChB,MAAMC,EAAcH,EAAII,QAAQH,GAAQI,IACtCH,EAAYG,EAAEC,OAAS,EAChB,SAASD,cAElB,OAAOH,EAAYC,EAAc,IACnC,C,wBA3GA,MAaE5C,YAAYC,EAAiBC,GAZ7B,KAAA8C,IAAgB,GAChB,KAAAC,iBAAqC,CAAC,EACtC,KAAAC,SAAgC,GAChC,KAAAC,WAAgC,KAChC,KAAAC,OAAS,GAET,mBAGQ,KAAAC,kBAAmB,IAAAC,mBAAiBtC,eAAkBb,KAAKoD,sBAC3D,KAAAC,gBAAiD,GAGvD,EAAArD,KAAI,EAAgB,IAAI,EAAAJ,YAAYE,EAASC,GAAmB,KAChEC,KAAKsD,OAAStD,KAAKuD,gBACrB,CAEI9C,aAASC,GACX,EAAAV,KAAI,OAAcS,SAAWC,CAC/B,CAEI8C,wBAAoBF,GACtB,MAAMG,EAAIH,EAAOI,OACA,IAAbD,EAAEb,OACJ5C,KAAKsD,OAAStD,KAAKuD,iBAEnBvD,KAAKsD,OAAS,IAAIK,EAAkB,IAAIC,OAAOH,EAAG,KAAM,EAAAzD,KAAI,OAEhE,CACI6D,uBAAmBP,GACrB,MAAMG,EAAIH,EAAOI,OACA,IAAbD,EAAEb,OACJ5C,KAAKsD,OAAStD,KAAKuD,iBAEnBvD,KAAKsD,OAAS,IAAIQ,EAAiB,IAAIF,OAAOH,EAAG,KAAMzD,KAAK8C,iBAAkB,EAAA9C,KAAI,OAEtF,CAEA+D,SACE/D,KAAKkD,kBACP,CACArC,gCACQb,KAAKgE,cACXhE,KAAKiE,aACLjE,KAAKkE,OACL,MAAMH,EAAuB,CAAEd,OAAQjD,KAAKiD,OAAQzC,QAASR,KAAK+C,UAClE/C,KAAKqD,gBAAgBc,SAASC,GAAMA,EAAEL,IACxC,CAEAM,kBAAkBC,GAChBtE,KAAKqD,gBAAgBkB,KAAKD,EAC5B,CAEQf,iBACN,OAAO,IAAIiB,EAAW,EAAAxE,KAAI,OAC5B,CAEQa,oBACN,MAAM4D,QAAezE,KAAKsD,OAAOoB,MAAM1E,KAAK6C,KAC5C7C,KAAKiD,OAASwB,EAAOxB,OACrBjD,KAAK+C,SAAW0B,EAAOE,OACzB,CAEQV,aACN,GAAIjE,KAAKgD,WAAY,CACnB,MAAM,WAAEA,GAAehD,KACvBA,KAAK+C,SAASoB,SAASS,IAAM,OAACA,EAAExC,MA6BpByC,EA7BoCD,EA6BVE,EA7Ba9B,EA8BhD+B,KAAKC,MAAMD,KAAKE,MAAMJ,EAAaK,EAAIJ,EAAWI,IAAM,GAAKL,EAAaM,EAAIL,EAAWK,IAAM,KADxG,IAAkBN,EAA0BC,CA7ByB,G,MAE/D9E,KAAK+C,SAASoB,SAASS,GAAOA,EAAExC,KAAO,MAE3C,CAEQ8B,OACFlE,KAAKgD,YACPhD,KAAKiD,OAAS,GAAGjD,KAAKiD,2CACtBjD,KAAK+C,SAASmB,KAAK/B,IAEnBnC,KAAK+C,SAASmB,KAAKnC,EAEvB,GAqCF,MAAMyC,EAGJ3E,YAAY2B,GACVxB,KAAKwB,OAASA,CAChB,CAEAX,YAAYL,GACV,MAAMgB,QAAexB,KAAKwB,OAAOhB,QACjC,MAAO,CACLyC,OAA2B,IAAnBzC,EAAQoC,OAAe,aAAe,cAC9C+B,QAASnE,EAAQ4E,KAAKR,IACpB,MAAMS,EAAQ7D,EAAOC,IAAImD,EAAE1C,OAAS,IACpC,MAAO,IACF0C,EACHU,gBAAiBV,EAAE1C,KACnBqD,iBAAkBF,EACnB,IAGP,EAGF,MAAM1B,EAIJ9D,YAAY2F,EAAgBhE,GAC1BxB,KAAKwF,OAASA,EACdxF,KAAKwB,OAASA,CAChB,CAEAX,YAAYL,GACV,MAAMgB,QAAexB,KAAKwB,OAAOhB,QAC3BiF,EAAUjF,EAAQkF,SAA4BC,IAClD,MAAML,EAAkBjD,EAAkBsD,EAAOzD,KAAMlC,KAAKwF,QACtDH,EAAQ7D,EAAOC,IAAIkE,EAAOzD,OAAS,IACnCqD,EAAmBF,GAAShD,EAAkBgD,EAAOrF,KAAKwF,QAChE,OAAIF,GAAmBC,EACd,IACFI,EACHL,gBAAiBA,GAAmBK,EAAOzD,KAC3CqD,iBAAkBA,GAAoBF,GAGnC,EAAE,IAEX,MAAO,CACLpC,OAAQ,GAAGwC,EAAQ7C,yBACnB+B,QAASc,EAEb,EAGF,MAAM3B,EAKJjE,YAAY2F,EAAgB1C,EAAoCtB,GAC9DxB,KAAKwF,OAASA,EACdxF,KAAK8C,iBAAmBA,EACxB9C,KAAKwB,OAASA,CAChB,CAEAX,YAAYL,GACV,MAAMoF,QAAsB5F,KAAK6F,cACjC,GAA6B,IAAzBD,EAAchD,OAChB,MAAO,CAAEK,OAAQ,oBAAqB0B,QAAS,IAGjD,MAAMmB,EAAsB9F,KAAK+F,iBAAiBH,GAClD,GAAgD,IAA5C1E,OAAO8E,KAAKF,GAAqBlD,OACnC,MAAO,CAAEK,OAAQ,mBAAmB2C,EAAchD,wBAAyB+B,QAAS,IAGtF,MAAMnD,QAAexB,KAAKwB,OAAOhB,QAC3BiF,EAAUjF,EAAQkF,SAASC,IAC/B,MAAMpF,EAASuF,EAAoBH,EAAOzD,MAC1C,OAAK3B,EAGE,IACFoF,EACHL,gBAAiBK,EAAOzD,KACxBqD,iBAAkB/D,EAAOC,IAAIkE,EAAOzD,OAAS,IAC7C0D,cAAerF,GANR,EAOR,IAEH,MAAO,CACL0C,OAAQ,GAAGwC,EAAQ7C,mBAAmBgD,EAAchD,wBACpD+B,QAASc,EAEb,CAEQ5E,oBACN,MAAMW,QAAexB,KAAKwB,OAAOjB,OACjC,OAAOW,OAAOC,QAAQnB,KAAK8C,kBAAkBmD,QAA2B,CAACC,GAAMC,EAAW3F,MACxF,MAAM8E,EAAkBjD,EAAkB8D,EAAWnG,KAAKwF,QACpDH,EAAQ7D,EAAOC,IAAI0E,IAAc,IACjCZ,EAAmBF,GAAShD,EAAkBgD,EAAOrF,KAAKwF,QAChE,OAAIF,GAAmBC,EACdW,EAAIE,OAAO,CAChBlE,KAAMiE,EACNb,gBAAiBA,GAAmBa,EACpCZ,iBAAkBA,GAAoBF,EACtC7E,YAGG0F,CAAG,GACT,GACL,CAEQH,iBAAiBH,GACvB,OAAOA,EAAcK,QAAgC,CAACI,EAAKC,KACzD,MAAM,KAAEpE,EAAI,gBAAEoD,EAAe,iBAAEC,GAAqBe,EAUpD,OATAA,EAAM9F,SAAS2D,SAASS,IACtB,MAAM3C,EAAI,CACRC,OACAoD,kBACAC,mBACAgB,MAAO3B,EAAE2B,OAEXF,EAAIzB,EAAE1C,OAASmE,EAAIzB,EAAE1C,OAAS,IAAIkE,OAAOnE,EAAE,IAEtCoE,CAAG,GACT,CAAC,EACN,E,2FChQF,eAEA,4BAAiCG,GAC/B,MAAMC,EAAkC,GACxC,MAAO,KACL,OAAQA,EAAe7D,QACrB,KAAK,EAOH,OANA6D,EAAelC,KACb,iBACQiC,IACNC,EAAeC,OAChB,EAHD,IAKKD,EAAe,GAExB,KAAK,EAAG,CACN,MAAME,EAAOF,EAAe,GAS5B,OARAA,EAAelC,KACb,iBACQoC,QACA,IAAAC,4BACAJ,IACNC,EAAeC,OAChB,EALD,IAOKD,EAAe,E,CAExB,KAAK,EACH,OAAOA,EAAe,GACxB,QACE,MAAMI,MAAM,gCAAgCJ,EAAe7D,U,CAGnE,C,cCjCA,SAAgBkE,EAAkBC,EAAyBC,EAAU,KAAM,qBAAqBD,MAC9F,GAAS,MAALA,EAAW,OAAOA,EACjB,MAAMF,MAAMG,IACnB,CAEA,SAAgBC,EAAeC,EAAYH,EAAiCC,EAAU,KAAM,oBAAoBE,MAC9G,GAAIA,aAAaH,EAAG,OAAOG,EAC3B,MAAML,MAAMG,IACd,CAqEA,SAAgBG,EAAWC,GACzB,MAAO,CAAEC,KAAM,UAAWD,EAC5B,CAGA,SAAgBE,EAAwBC,EAAqBC,EAAsBC,GAEjF,MAAMC,EAAMH,EAAMI,QAAUH,EAAQI,MAASH,EAAWG,MAClDC,EAAMN,EAAMO,QAAUN,EAAQO,OAAUN,EAAWM,OACzD,GAAIL,EAAK,GAAKA,GAAMF,EAAQI,OAASC,EAAK,GAAKA,GAAML,EAAQO,OAC3D,OAAO,KAIT,MAAM7C,EAAIwC,EAAK3C,KAAKiD,MAAMR,EAAQI,MAAQ,GACpCzC,EAAIJ,KAAKiD,MAAMR,EAAQO,OAAS,GAAKF,EAC3C,OAAOV,EAAW,CAAEjC,EAAGH,KAAKC,MAAME,GAAIC,EAAGJ,KAAKC,MAAMG,IACtD,C,4SA9FA,mBAKA,gBAKA,qBAA+D8C,EAA+BlB,GAC5F,MAAMmB,EAAIpB,EACRqB,SAASC,eAAetB,EAAemB,GAAI,IAAM,6BAA6BA,QAC9E,IAAM,uBAAuBA,MAE/B,OAAOlB,EAAIE,EAAYiB,EAAGnB,GAAMmB,CAClC,EAEA,6BAAkCA,GAChC,KAAOA,EAAEG,WAAWH,EAAEI,YAAYJ,EAAEG,UACtC,EAEA,iCAAsCE,GACpC,OAAIA,EAAI,IACC,GAAGA,KAEL,IAAIA,EAAI,KAAMC,QAAQ,MAC/B,EAEA,gCACE,OAAO,IAAIC,SAASC,GAAMC,sBAAsBD,IAClD,EAOA,wBACEtD,EACAwD,EACAC,EACAtB,GAEA,IAAKA,EAAO,MAAO,0BAEnB,MAAMJ,EAAaG,EAAwBC,EAAOnC,EAAKwD,GACvD,GAAmB,OAAfzB,EACF,MAAO,0BAGT,MAAM2B,EAAID,EAAU1B,EAAY/B,IAAQ,IACxC,MAAO,QAAQ+B,EAAWjC,WAAWiC,EAAWhC,YAAY2D,GAC9D,EAEA,6BAAkC/H,EAAkB6H,GAClD,MAAM5G,EAAImG,SAASY,cAAc,KACjC/G,EAAEgH,SAAWjI,EACbiB,EAAEiH,KAAOL,EAAOM,UAAU,aAC1BlH,EAAEmH,OACJ,EAEA,uBAAOtI,eAAoCuI,GACzC,MAAMR,EAAS,IAAIS,gBAAgBD,EAAIrB,OAAQqB,EAAIxB,OAGnD,OAFgBd,EAAe8B,EAAOU,WAAW,OACzCC,UAAUH,EAAK,EAAG,SACZR,EAAOY,cAAc,CAAEnC,KAAM,aAC7C,EAEA,QAAOxG,eAAqB4I,GAC1B,OAAO,IAAIhB,SAASC,GAAMgB,WAAWhB,EAAGe,IAC1C,EAEA,uBAA4BhG,GAC1B,MAAO,CAAE4D,KAAM,UAAW5D,EAC5B,EAEA,eAKA,4BAcA,0BAA+BmE,EAAeG,GAC5C,MAAO,CAAEV,KAAM,aAAcO,QAAOG,SACtC,C,2JClGA,MAIMvH,EAAU,IAJhB,SAIoB,SAAQ,YAAamJ,UAAUhI,WACnD,WACEnB,EAAQsC,uBAWVjC,eAA4BO,GAC1B,aAAcC,MAZ6B,+BAYhBC,MAC7B,CAbmCC,GACjCf,EAAQuD,QACT,EAHD,GAKA6F,UAAY,EAAGC,WACblJ,QAAQC,IAAI,mCAAoCiJ,GAChD3I,OAAO4I,OAAOtJ,EAASqJ,GAAM9F,QAAQ,EAGvCvD,EAAQ6D,mBAAmB0F,GAAMC,YAAYD,I,GCdzCE,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CCnB0BJ,CAAoB,I","sources":["webpack://7dtd-map/./src/lib/labels.ts","webpack://7dtd-map/./src/lib/prefabs.ts","webpack://7dtd-map/./src/lib/throttled-invoker.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/./src/worker/prefabs-filter.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/startup"],"sourcesContent":["export const LANGUAGES = [\n  \"english\",\n  \"german\",\n  \"spanish\",\n  \"french\",\n  \"italian\",\n  \"japanese\",\n  \"koreana\",\n  \"polish\",\n  \"brazilian\",\n  \"russian\",\n  \"turkish\",\n  \"schinese\",\n  \"tchinese\",\n] as const;\nexport type Language = (typeof LANGUAGES)[number];\n\nconst LANGUAGE_TAGS: { [tag: string]: Language } = {\n  en: \"english\",\n  de: \"german\",\n  es: \"spanish\",\n  fr: \"french\",\n  it: \"italian\",\n  ja: \"japanese\",\n  ko: \"koreana\",\n  pl: \"polish\",\n  pt: \"brazilian\",\n  ru: \"russian\",\n  tr: \"turkish\",\n  \"zh-CN\": \"schinese\",\n  \"zh-TW\": \"tchinese\",\n};\n\nexport class LabelHolder {\n  static DEFAULT_LANGUAGE: Language = \"english\";\n\n  private baseUrl: string;\n  private defaultBlocks: Promise<Map<string, string>>;\n  private defaultPrefabs: Promise<Map<string, string>>;\n\n  #language: Language;\n  #blocks: Promise<Labels>;\n  #prefabs: Promise<Labels>;\n\n  constructor(baseUrl: string, navigatorLanguages: readonly string[]) {\n    this.baseUrl = baseUrl;\n    this.#language = resolveLanguage(navigatorLanguages);\n    this.defaultBlocks = this.fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, \"blocks.json\");\n    this.defaultPrefabs = this.fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, \"prefabs.json\");\n    this.#blocks = this.buildLabels(this.defaultBlocks, \"blocks.json\");\n    this.#prefabs = this.buildLabels(this.defaultPrefabs, \"prefabs.json\");\n  }\n\n  get blocks(): Promise<Labels> {\n    return this.#blocks;\n  }\n\n  get prefabs(): Promise<Labels> {\n    return this.#prefabs;\n  }\n\n  set language(lang: Language) {\n    if (lang === this.#language) return;\n    console.log(\"LabelHolder set language: %s -> %s\", this.#language, lang);\n    this.#language = lang;\n    this.#blocks = this.buildLabels(this.defaultBlocks, \"blocks.json\");\n    this.#prefabs = this.buildLabels(this.defaultPrefabs, \"prefabs.json\");\n  }\n\n  async buildLabels(defaultLabels: Promise<Map<string, string>>, fileName: string): Promise<Labels> {\n    return new Labels(await this.fetchLabelMap(this.#language, fileName), await defaultLabels);\n  }\n\n  async fetchLabelMap(language: Language, fileName: string): Promise<Map<string, string>> {\n    return new Map(Object.entries(await fetchJson<Labels>(`${this.baseUrl}/${language}/${fileName}`)));\n  }\n}\n\nexport class Labels {\n  labels: Map<string, string>;\n  defaultLabels: Map<string, string>;\n\n  constructor(labels: Map<string, string>, defaultLabels: Map<string, string>) {\n    this.labels = labels;\n    this.defaultLabels = defaultLabels;\n  }\n\n  get(key: string): string | undefined {\n    return this.labels.get(key) ?? this.defaultLabels.get(key);\n  }\n}\n\nexport function resolveLanguage(languages: readonly string[]): Language {\n  for (const clientTag of languages) {\n    for (const [tag, lang] of Object.entries(LANGUAGE_TAGS)) {\n      if (clientTag.startsWith(tag)) return lang;\n    }\n  }\n  return LabelHolder.DEFAULT_LANGUAGE;\n}\n\nasync function fetchJson<T>(path: string): Promise<T> {\n  return (await fetch(path)).json();\n}\n","import { throttledInvoker } from \"./throttled-invoker\";\nimport { LabelHolder, Language } from \"./labels\";\n\nexport interface PrefabUpdate {\n  status: string;\n  prefabs: HighlightedPrefab[];\n}\n\ninterface PrefabHighlightedBlocks {\n  [prefabName: string]: HighlightedBlock[];\n}\n\nexport default class Prefabs {\n  all: Prefab[] = [];\n  blockPrefabIndex: BlockPrefabIndex = {};\n  filtered: HighlightedPrefab[] = [];\n  markCoords: GameCoords | null = null;\n  status = \"\";\n\n  #labelHolder: LabelHolder;\n  filter: PrefabMatcher;\n\n  private throttledUpdater = throttledInvoker(async () => await this.updateImmediately());\n  private updateListeners: ((u: PrefabUpdate) => void)[] = [];\n\n  constructor(baseUrl: string, navigatorLanguages: readonly string[]) {\n    this.#labelHolder = new LabelHolder(baseUrl, navigatorLanguages);\n    this.filter = this.defaultMatcher();\n  }\n\n  set language(lang: Language) {\n    this.#labelHolder.language = lang;\n  }\n\n  set prefabsFilterString(filter: string) {\n    const s = filter.trim();\n    if (s.length === 0) {\n      this.filter = this.defaultMatcher();\n    } else {\n      this.filter = new PrefabNameMatcher(new RegExp(s, \"i\"), this.#labelHolder);\n    }\n  }\n  set blocksFilterString(filter: string) {\n    const s = filter.trim();\n    if (s.length === 0) {\n      this.filter = this.defaultMatcher();\n    } else {\n      this.filter = new BlockNameMatcher(new RegExp(s, \"i\"), this.blockPrefabIndex, this.#labelHolder);\n    }\n  }\n\n  update(): void {\n    this.throttledUpdater();\n  }\n  async updateImmediately(): Promise<void> {\n    await this.applyFilter();\n    this.updateDist();\n    this.sort();\n    const update: PrefabUpdate = { status: this.status, prefabs: this.filtered };\n    this.updateListeners.forEach((f) => f(update));\n  }\n\n  addUpdateListener(func: (update: PrefabUpdate) => void): void {\n    this.updateListeners.push(func);\n  }\n\n  private defaultMatcher() {\n    return new AllMatcher(this.#labelHolder);\n  }\n\n  private async applyFilter() {\n    const result = await this.filter.match(this.all);\n    this.status = result.status;\n    this.filtered = result.matched;\n  }\n\n  private updateDist() {\n    if (this.markCoords) {\n      const { markCoords } = this;\n      this.filtered.forEach((p) => (p.dist = calcDist(p, markCoords)));\n    } else {\n      this.filtered.forEach((p) => (p.dist = null));\n    }\n  }\n\n  private sort() {\n    if (this.markCoords) {\n      this.status = `${this.status}, order by distances from the flag`;\n      this.filtered.sort(distSorter);\n    } else {\n      this.filtered.sort(nameSorter);\n    }\n  }\n}\n\nfunction nameSorter(a: { name: string }, b: { name: string }) {\n  if (a.name > b.name) return 1;\n  if (a.name < b.name) return -1;\n  return 0;\n}\n\nfunction distSorter(a: HighlightedPrefab, b: HighlightedPrefab) {\n  if (!a.dist || !b.dist) return nameSorter(a, b);\n  if (a.dist > b.dist) return 1;\n  if (a.dist < b.dist) return -1;\n  return nameSorter(a, b);\n}\n\nfunction calcDist(targetCoords: GameCoords, baseCoords: GameCoords) {\n  return Math.round(Math.sqrt((targetCoords.x - baseCoords.x) ** 2 + (targetCoords.z - baseCoords.z) ** 2));\n}\n\nfunction matchAndHighlight(str: string, regex: RegExp) {\n  let isMatched = false;\n  const highlighted = str.replace(regex, (m) => {\n    isMatched = m.length > 0;\n    return `<mark>${m}</mark>`;\n  });\n  return isMatched ? highlighted : null;\n}\n\ninterface PrefabMatcher {\n  match(prefabs: Prefab[]): Promise<PrefabMatcherResult>;\n}\ninterface PrefabMatcherResult {\n  status: string;\n  matched: HighlightedPrefab[];\n}\n\nclass AllMatcher implements PrefabMatcher {\n  labels: LabelHolder;\n\n  constructor(labels: LabelHolder) {\n    this.labels = labels;\n  }\n\n  async match(prefabs: Prefab[]) {\n    const labels = await this.labels.prefabs;\n    return {\n      status: prefabs.length === 0 ? \"No prefabs\" : \"All prefabs\",\n      matched: prefabs.map((p) => {\n        const label = labels.get(p.name) ?? \"-\";\n        return {\n          ...p,\n          highlightedName: p.name,\n          highlightedLabel: label,\n        };\n      }),\n    };\n  }\n}\n\nclass PrefabNameMatcher implements PrefabMatcher {\n  regexp: RegExp;\n  labels: LabelHolder;\n\n  constructor(regexp: RegExp, labels: LabelHolder) {\n    this.regexp = regexp;\n    this.labels = labels;\n  }\n\n  async match(prefabs: Prefab[]) {\n    const labels = await this.labels.prefabs;\n    const results = prefabs.flatMap<HighlightedPrefab>((prefab) => {\n      const highlightedName = matchAndHighlight(prefab.name, this.regexp);\n      const label = labels.get(prefab.name) ?? \"-\";\n      const highlightedLabel = label && matchAndHighlight(label, this.regexp);\n      if (highlightedName || highlightedLabel) {\n        return {\n          ...prefab,\n          highlightedName: highlightedName || prefab.name,\n          highlightedLabel: highlightedLabel || label,\n        };\n      }\n      return [];\n    });\n    return {\n      status: `${results.length} matched prefabs`,\n      matched: results,\n    };\n  }\n}\n\nclass BlockNameMatcher implements PrefabMatcher {\n  regexp: RegExp;\n  blockPrefabIndex: BlockPrefabIndex;\n  labels: LabelHolder;\n\n  constructor(regexp: RegExp, blockPrefabIndex: BlockPrefabIndex, labels: LabelHolder) {\n    this.regexp = regexp;\n    this.blockPrefabIndex = blockPrefabIndex;\n    this.labels = labels;\n  }\n\n  async match(prefabs: Prefab[]) {\n    const matchedBlocks = await this.matchBlocks();\n    if (matchedBlocks.length === 0) {\n      return { status: \"No matched blocks\", matched: [] };\n    }\n\n    const matchedPrefabBlocks = this.matchPrefabTypes(matchedBlocks);\n    if (Object.keys(matchedPrefabBlocks).length === 0) {\n      return { status: `No prefabs, but ${matchedBlocks.length} matched blocks`, matched: [] };\n    }\n\n    const labels = await this.labels.prefabs;\n    const results = prefabs.flatMap((prefab: Prefab) => {\n      const blocks = matchedPrefabBlocks[prefab.name];\n      if (!blocks) {\n        return [];\n      }\n      return {\n        ...prefab,\n        highlightedName: prefab.name,\n        highlightedLabel: labels.get(prefab.name) ?? \"-\",\n        matchedBlocks: blocks,\n      };\n    });\n    return {\n      status: `${results.length} prefabs, ${matchedBlocks.length} matched blocks`,\n      matched: results,\n    };\n  }\n\n  private async matchBlocks() {\n    const labels = await this.labels.blocks;\n    return Object.entries(this.blockPrefabIndex).reduce<HighlightedBlock[]>((arr, [blockName, prefabs]) => {\n      const highlightedName = matchAndHighlight(blockName, this.regexp);\n      const label = labels.get(blockName) ?? \"-\";\n      const highlightedLabel = label && matchAndHighlight(label, this.regexp);\n      if (highlightedName || highlightedLabel) {\n        return arr.concat({\n          name: blockName,\n          highlightedName: highlightedName || blockName,\n          highlightedLabel: highlightedLabel || label,\n          prefabs,\n        });\n      }\n      return arr;\n    }, []);\n  }\n\n  private matchPrefabTypes(matchedBlocks: HighlightedBlock[]): PrefabHighlightedBlocks {\n    return matchedBlocks.reduce<PrefabHighlightedBlocks>((idx, block) => {\n      const { name, highlightedName, highlightedLabel } = block;\n      block.prefabs?.forEach((p) => {\n        const b = {\n          name,\n          highlightedName,\n          highlightedLabel,\n          count: p.count,\n        };\n        idx[p.name] = (idx[p.name] || []).concat(b);\n      });\n      return idx;\n    }, {});\n  }\n}\n","import { waitAnimationFrame } from \"./utils\";\n\nexport function throttledInvoker(asyncFunc: () => Promise<void> | void): () => Promise<void> {\n  const workerPromises: Promise<void>[] = [];\n  return () => {\n    switch (workerPromises.length) {\n      case 0: {\n        workerPromises.push(\n          (async () => {\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[0];\n      }\n      case 1: {\n        const prev = workerPromises[0];\n        workerPromises.push(\n          (async () => {\n            await prev;\n            await waitAnimationFrame();\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[1];\n      }\n      case 2:\n        return workerPromises[1];\n      default:\n        throw Error(`Unexpected state: promiceses=${workerPromises.length}`);\n    }\n  };\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t != null) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: GameMapSize,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords, mapSize: GameMapSize) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  const y = elevation(gameCoords, map) ?? \"-\";\n  return `E/W: ${gameCoords.x}, N/S: ${gameCoords.z}, Elev: ${y}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function imageBitmapToPngBlob(img: ImageBitmap): Promise<PngBlob> {\n  const canvas = new OffscreenCanvas(img.height, img.width);\n  const context = requireNonnull(canvas.getContext(\"2d\"));\n  context.drawImage(img, 0, 0);\n  return (await canvas.convertToBlob({ type: \"image/png\" })) as PngBlob;\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n","import Prefabs from \"../lib/prefabs\";\n\nexport type InMessage = Partial<Pick<Prefabs, \"all\" | \"prefabsFilterString\" | \"blocksFilterString\" | \"markCoords\" | \"language\">>;\n\nconst prefabs = new Prefabs(\"../labels\", navigator.languages);\n(async () => {\n  prefabs.blockPrefabIndex = await fetchJson(\"../block-prefab-index.json\");\n  prefabs.update();\n})();\n\nonmessage = ({ data }: MessageEvent<InMessage>) => {\n  console.log(\"Prefab-filter received message: \", data);\n  Object.assign(prefabs, data).update();\n};\n\nprefabs.addUpdateListener((u) => postMessage(u));\n\nasync function fetchJson<T>(path: string): Promise<T> {\n  return (await fetch(path)).json();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(770);\n"],"names":["LANGUAGES","LANGUAGE_TAGS","en","de","es","fr","it","ja","ko","pl","pt","ru","tr","LabelHolder","constructor","baseUrl","navigatorLanguages","this","resolveLanguage","defaultBlocks","fetchLabelMap","DEFAULT_LANGUAGE","defaultPrefabs","buildLabels","blocks","prefabs","language","lang","console","log","async","defaultLabels","fileName","Labels","Map","Object","entries","path","fetch","json","fetchJson","labels","get","key","languages","clientTag","tag","startsWith","nameSorter","a","b","name","distSorter","dist","matchAndHighlight","str","regex","isMatched","highlighted","replace","m","length","all","blockPrefabIndex","filtered","markCoords","status","throttledUpdater","throttledInvoker","updateImmediately","updateListeners","filter","defaultMatcher","prefabsFilterString","s","trim","PrefabNameMatcher","RegExp","blocksFilterString","BlockNameMatcher","update","applyFilter","updateDist","sort","forEach","f","addUpdateListener","func","push","AllMatcher","result","match","matched","p","targetCoords","baseCoords","Math","round","sqrt","x","z","map","label","highlightedName","highlightedLabel","regexp","results","flatMap","prefab","matchedBlocks","matchBlocks","matchedPrefabBlocks","matchPrefabTypes","keys","reduce","arr","blockName","concat","idx","block","count","asyncFunc","workerPromises","shift","prev","waitAnimationFrame","Error","requireNonnull","t","message","requireType","o","gameCoords","c","type","canvasEventToGameCoords","event","mapSize","canvasSize","gx","offsetX","width","gz","offsetY","height","floor","id","e","document","getElementById","lastChild","removeChild","d","toFixed","Promise","r","requestAnimationFrame","canvas","elevation","y","createElement","download","href","toDataURL","click","img","OffscreenCanvas","getContext","drawImage","convertToBlob","msec","setTimeout","navigator","onmessage","data","assign","u","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}
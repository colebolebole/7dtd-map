"use strict";(()=>{function w(){return new Promise(t=>requestAnimationFrame(t))}function c(t){console.error(t)}async function u(t){return await(await fetch(t)).json()}function x(t){let e=[];return()=>{switch(e.length){case 0:{let n=(async()=>{await t(),e.shift()})();return e.push(n),n}case 1:{let n=e[0],r=(async()=>{await n,await w(),await t(),e.shift()})();return e.push(r),r}case 2:return e[1];default:throw Error(`Unexpected state: promiceses=${e.length.toString()}`)}}}var y={en:"english",de:"german",es:"spanish",fr:"french",it:"italian",ja:"japanese",ko:"koreana",pl:"polish",pt:"brazilian",ru:"russian",tr:"turkish","zh-CN":"schinese","zh-TW":"tchinese"},k=["blocks","prefabs","shapes"],o=class t{static DEFAULT_LANGUAGE="english";#t;#e;#n;#r;constructor(e,n){this.#t=e,this.#e=v(n),this.#n=new Map(k.map(r=>[r,this.#s(t.DEFAULT_LANGUAGE,r)])),this.#r=this.#i()}get(e){let n=this.#r.get(e);if(!n)throw new Error(`No labels for ${this.#e}/${e}`);return n}set language(e){e!==this.#e&&(console.log("LabelHolder set language: %s -> %s",this.#e,e),this.#e=e,this.#r=this.#i())}#i(){return new Map(k.map(e=>[e,this.#a(e)]))}async#a(e){let n=this.#n.get(e);if(!n)throw new Error(`No fallback for ${this.#e}/${e}`);return new p(await this.#s(this.#e,e),await n)}async#s(e,n){return new Map(Object.entries(await u(`${this.#t}/${e}/${n}.json`)))}},p=class{#t;#e;constructor(e,n){this.#t=e,this.#e=n}get(e){return this.#t.get(e)??this.#e.get(e)}};function v(t){for(let e of t)for(let[n,r]of Object.entries(y))if(e.startsWith(n))return r;return o.DEFAULT_LANGUAGE}var l=class{#t;#e=[];#n="";all=[];markCoords=null;difficulty={start:0,end:5};prefabFilterRegexp="";blockFilterRegexp="";blockPrefabCounts={};throttledUpdater=x(()=>this.updateImmediately());updateListeners=[];constructor(e,n){this.#t=new o(e,n)}set language(e){this.#t.language=e}update(){this.throttledUpdater().catch(c)}async updateImmediately(){await this.#i(),this.#r(),this.#h(),this.#c();let e={status:this.#n,prefabs:this.#e};this.updateListeners.forEach(n=>{n(e)})}#r(){this.prefabFilterRegexp.length===0&&this.blockFilterRegexp.length===0&&this.difficulty.start===0&&this.difficulty.end===5?this.#n="All prefabs":this.#e.length===0?this.#n="No prefabs matched":this.#n=`${this.#e.length.toString()} prefabs matched`}addUpdateListener(e){this.updateListeners.push(e)}async#i(){let e=this.#a(this.all);e=await this.#s(e),e=await this.#o(e),this.#e=e}#a(e){return e.filter(n=>{let r=n.difficulty??0;return r>=this.difficulty.start&&r<=this.difficulty.end})}async#s(e){let n=await this.#t.get("prefabs");return e.flatMap(r=>{let i=n.get(r.name);if(this.prefabFilterRegexp.length===0)return{...r,highlightedName:r.name,highlightedLabel:i??"-"};let s=g(r.name,new RegExp(this.prefabFilterRegexp,"i")),a=i&&g(i,new RegExp(this.prefabFilterRegexp,"i"));return s!=null||a!=null?{...r,highlightedName:s??r.name,highlightedLabel:a??i??"-"}:[]})}async#o(e){if(this.blockFilterRegexp.length===0)return e;let n=await this.#l(e);return e.flatMap(r=>{let i=n[r.name];return i?{...r,matchedBlocks:i}:[]})}async#l(e){let n=await this.#t.get("blocks"),r=await this.#t.get("shapes"),i=new Set(e.map(a=>a.name)),s={};for(let[a,E]of Object.entries(this.blockPrefabCounts)){let b=g(a,new RegExp(this.blockFilterRegexp,"i")),d=n.get(a)??r.get(a)??"-",P=d&&g(d,new RegExp(this.blockFilterRegexp,"i"));if(!(b==null&&P==null))for(let[m,L]of Object.entries(E))i.has(m)&&(s[m]=(s[m]??[]).concat({name:a,highlightedName:b??a,highlightedLabel:P??d,count:L}))}return s}#h(){if(this.markCoords){let{markCoords:e}=this;this.#e.forEach(n=>n.dist=C(n,e))}else this.#e.forEach(e=>e.dist=null)}#c(){this.markCoords?(this.#n+=", order by distances from the flag",this.#e.sort(M)):this.blockFilterRegexp.length>0?(this.#n+=", order by counts of matched blocks",this.#e.sort(N)):this.#e.sort(h)}};function h(t,e){return t.name>e.name?1:t.name<e.name?-1:0}function N(t,e){if(!t.matchedBlocks||!e.matchedBlocks)return h(t,e);let n=t.matchedBlocks.reduce((i,s)=>i+(s.count??0),0),r=e.matchedBlocks.reduce((i,s)=>i+(s.count??0),0);return n<r?1:n>r?-1:h(t,e)}function M(t,e){return!t.dist||!e.dist?h(t,e):t.dist>e.dist?1:t.dist<e.dist?-1:h(t,e)}function C(t,e){return Math.round(Math.sqrt((t.x-e.x)**2+(t.z-e.z)**2))}function g(t,e){let n=!1,r=t.replace(e,i=>(n=i.length>0,`<mark>${i}</mark>`));return n?r:null}var f=new l("../labels",navigator.languages);(async()=>{f.blockPrefabCounts=T(await u("../prefab-block-counts.json")),f.update()})().catch(c);onmessage=({data:t})=>{console.log("Prefab-filter received message: ",t),Object.assign(f,t).update()};f.addUpdateListener(t=>{console.log("Prefab-filter send message: ",t),postMessage(t)});function T(t){let e={};for(let[n,r]of Object.entries(t))for(let[i,s]of Object.entries(r))e[i]=Object.assign(e[i]??{},{[n]:s});return e}})();
//# sourceMappingURL=prefabs-filter.js.map

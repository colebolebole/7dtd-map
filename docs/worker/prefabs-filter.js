"use strict";(()=>{async function x(n){return new Promise(e=>setTimeout(e,n))}function u(n){console.error(n)}async function g(n){return await(await fetch(n)).json()}function k(n,e=100){let t=[];return()=>{switch(t.length){case 0:{let r=(async()=>{try{await n()}finally{t.shift()}})();return t.push(r),r}case 1:{let r=t[0],i=(async()=>{await r,await x(e);try{await n()}finally{t.shift()}})();return t.push(i),i}case 2:return t[1];default:throw Error(`Unexpected state: promiceses=${t.length.toString()}`)}}}var v={en:"english",de:"german",es:"spanish",fr:"french",it:"italian",ja:"japanese",ko:"koreana",pl:"polish",pt:"brazilian",ru:"russian",tr:"turkish","zh-CN":"schinese","zh-TW":"tchinese"},E=["blocks","prefabs","shapes"],l=class n{static DEFAULT_LANGUAGE="english";#t;#e;#n;#r;constructor(e,t){this.#t=e,this.#e=N(t),this.#n=new Map(E.map(r=>[r,this.#s(n.DEFAULT_LANGUAGE,r)])),this.#r=this.#i()}get(e){let t=this.#r.get(e);if(!t)throw new Error(`No labels for ${this.#e}/${e}`);return t}set language(e){e!==this.#e&&(console.log("LabelHolder set language: %s -> %s",this.#e,e),this.#e=e,this.#r=this.#i())}#i(){return new Map(E.map(e=>[e,this.#a(e)]))}async#a(e){let t=this.#n.get(e);if(!t)throw new Error(`No fallback for ${this.#e}/${e}`);return new b(await this.#s(this.#e,e),await t)}async#s(e,t){return new Map(Object.entries(await g(`${this.#t}/${e}/${t}.json`)))}},b=class{#t;#e;constructor(e,t){this.#t=e,this.#e=t}get(e){return this.#t.get(e)??this.#e.get(e)}};function N(n){for(let e of n)for(let[t,r]of Object.entries(v))if(e.startsWith(t))return r;return l.DEFAULT_LANGUAGE}var c=class{#t;#e=[];#n="";all=[];markCoords=null;difficulty={start:0,end:5};prefabFilterRegexp="";blockFilterRegexp="";blockPrefabCounts={};throttledUpdater=k(()=>this.updateImmediately());updateListeners=[];constructor(e,t){this.#t=new l(e,t)}set language(e){this.#t.language=e}update(){this.throttledUpdater().catch(u)}async updateImmediately(){await this.#i(),this.#r(),this.#c(),this.#h();let e={status:this.#n,prefabs:this.#e};this.updateListeners.forEach(t=>{t(e)})}#r(){this.prefabFilterRegexp.length===0&&this.blockFilterRegexp.length===0&&this.difficulty.start===0&&this.difficulty.end===5?this.#n="All prefabs":this.#e.length===0?this.#n="No prefabs matched":this.#n=`${this.#e.length.toString()} prefabs matched`}addUpdateListener(e){this.updateListeners.push(e)}async#i(){let e=this.#a(this.all);e=await this.#s(e),e=await this.#o(e),this.#e=e}#a(e){return e.filter(t=>{let r=t.difficulty??0;return r>=this.difficulty.start&&r<=this.difficulty.end})}async#s(e){let t=await this.#t.get("prefabs"),r=new RegExp(this.prefabFilterRegexp,"i");return e.flatMap(i=>{let s=t.get(i.name);if(this.prefabFilterRegexp.length===0)return{...i,highlightedName:i.name,highlightedLabel:s??"-"};let o=f(i.name,r),a=s&&f(s,r);return o!=null||a!=null?{...i,highlightedName:o??i.name,highlightedLabel:a??s??"-"}:[]})}async#o(e){if(this.blockFilterRegexp.length===0)return e;let t=await this.#l(e);return e.flatMap(r=>{let i=t[r.name];return i?{...r,matchedBlocks:i}:[]})}async#l(e){let t=await this.#t.get("blocks"),r=await this.#t.get("shapes"),i=new Set(e.map(a=>a.name)),s={},o=new RegExp(this.blockFilterRegexp,"i");for(let[a,y]of Object.entries(this.blockPrefabCounts)){let P=f(a,o),d=t.get(a)??r.get(a)??"-",w=d&&f(d,o);if(!(P==null&&w==null))for(let[p,L]of Object.entries(y))i.has(p)&&(s[p]=(s[p]??[]).concat({name:a,highlightedName:P??a,highlightedLabel:w??d,count:L}))}return s}#c(){if(this.markCoords){let{markCoords:e}=this;this.#e.forEach(t=>t.dist=T(t,e))}else this.#e.forEach(e=>e.dist=null)}#h(){this.#e.length===0?this.#n+=". Please relax the filter conditions":this.markCoords?(this.#n+=", order by distances from the flag",this.#e.sort(M)):this.blockFilterRegexp.length>0?(this.#n+=", order by counts of matched blocks",this.#e.sort(B)):this.#e.sort(h)}};function h(n,e){return n.name>e.name?1:n.name<e.name?-1:0}function B(n,e){if(!n.matchedBlocks||!e.matchedBlocks)return h(n,e);let t=n.matchedBlocks.reduce((i,s)=>i+(s.count??0),0),r=e.matchedBlocks.reduce((i,s)=>i+(s.count??0),0);return t<r?1:t>r?-1:h(n,e)}function M(n,e){return!n.dist||!e.dist?h(n,e):n.dist>e.dist?1:n.dist<e.dist?-1:h(n,e)}function T(n,e){return Math.round(Math.sqrt((n.x-e.x)**2+(n.z-e.z)**2))}function f(n,e){let t=!1,r=n.replace(e,i=>(t=i.length>0,`<mark>${i}</mark>`));return t?r:null}var m=new c("../labels",navigator.languages);(async()=>{m.blockPrefabCounts=C(await g("../prefab-block-counts.json")),m.update()})().catch(u);onmessage=({data:n})=>{console.log("Prefab-filter received message: ",n),Object.assign(m,n).update()};m.addUpdateListener(n=>{console.log("Prefab-filter send message: ",n),postMessage(n)});function C(n){let e={};for(let[t,r]of Object.entries(n))for(let[i,s]of Object.entries(r))e[i]=Object.assign(e[i]??{},{[t]:s});return e}})();
//# sourceMappingURL=prefabs-filter.js.map
